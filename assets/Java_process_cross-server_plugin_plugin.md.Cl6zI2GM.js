import{_ as a,c as r,j as e,a as t,o as n}from"./chunks/framework.O9ad3XaM.js";const m=JSON.parse('{"title":"插件","description":"","frontmatter":{"title":"插件","slug":"/cross-server/plugin","sidebar_position":4},"headers":[],"relativePath":"Java/process/cross-server/plugin/plugin.md","filePath":"nitwikit/docs-java/process/cross-server/plugin/plugin.md","lastUpdated":1731662521000}'),o={name:"Java/process/cross-server/plugin/plugin.md"};function l(i,s,p,c,d,u){return n(),r("div",null,s[0]||(s[0]=[e("h1",{id:"插件",tabindex:"-1"},[t("插件 "),e("a",{class:"header-anchor",href:"#插件","aria-label":'Permalink to "插件"'},"​")],-1),e("p",null,"和后端服务器一样，反代核心也可以安装一些插件，但他们和后端使用的插件往往不能互相兼容，在安装时请查看插件是否支持对应的反代核心。",-1),e("p",null,"一般说来，反代核心的插件相对功能性会偏向于网络协议、验证、MOTD 等而非后端多种多样的表现方式，",-1),e("p",null,"但是，网络协议类的插件安装在反向代理将会有非常明显的提升，如反假人、FastMOTD 等，这是因为反向代理在网络方面高度优化。",-1)]))}const _=a(o,[["render",l]]);export{m as __pageData,_ as default};
