import{_ as t,c as s,j as e,a as r,o as n}from"./chunks/framework.O9ad3XaM.js";const g=JSON.parse('{"title":"插件","description":"","frontmatter":{"title":"插件","slug":"/cross-server/plugin","sidebar_position":4},"headers":[],"relativePath":"nitwikit/docs-java/advance/cross-server/plugin/plugin.md","filePath":"nitwikit/docs-java/advance/cross-server/plugin/plugin.md","lastUpdated":1727731002000}'),i={name:"nitwikit/docs-java/advance/cross-server/plugin/plugin.md"};function l(o,a,c,d,p,u){return n(),s("div",null,a[0]||(a[0]=[e("h1",{id:"插件",tabindex:"-1"},[r("插件 "),e("a",{class:"header-anchor",href:"#插件","aria-label":'Permalink to "插件"'},"​")],-1),e("p",null,"和后端服务器一样，反代核心也可以安装一些插件，但他们和后端使用的插件往往不能互相兼容，在安装时请查看插件是否支持对应的反代核心。",-1),e("p",null,"一般说来，反代核心的插件相对功能性会偏向于网络协议、验证、MOTD 等而非后端多种多样的表现方式，",-1),e("p",null,"但是，网络协议类的插件安装在反向代理将会有非常明显的提升，如反假人、FastMOTD 等，这是因为反向代理在网络方面高度优化。",-1)]))}const m=t(i,[["render",l]]);export{g as __pageData,m as default};
