import{_ as a,c as o,a5 as t,o as i}from"./chunks/framework.O9ad3XaM.js";const u=JSON.parse('{"title":"插件安装教程","description":"","frontmatter":{"title":"插件安装教程","sidebar_position":2},"headers":[],"relativePath":"Bedrock/bds-core/process/LiteLoaderBDS/plugins.md","filePath":"nitwikit/docs-bedrock/bds-core/process/LiteLoaderBDS/plugins.md","lastUpdated":1733331385000}'),l={name:"Bedrock/bds-core/process/LiteLoaderBDS/plugins.md"};function r(d,e,n,s,c,h){return i(),o("div",null,e[0]||(e[0]=[t('<h1 id="插件安装教程" tabindex="-1">插件安装教程 <a class="header-anchor" href="#插件安装教程" aria-label="Permalink to &quot;插件安装教程&quot;">​</a></h1><h2 id="插件的分类" tabindex="-1">插件的分类 <a class="header-anchor" href="#插件的分类" aria-label="Permalink to &quot;插件的分类&quot;">​</a></h2><p>LiteLoaderBDS 的插件共有以下几类：</p><ol><li>原生插件(native)：俗称 dll 插件。通常是一个 .dll 后缀的文件。</li><li>QuickJS 插件(qjs)：俗称单文件 js 插件。通常是一个 .js 后缀的文件。</li><li>Lua 插件：通常是一个 .lua 后缀的文件。</li><li>NodeJS 插件：通常是一个文件夹或是一个 .llplugin 后缀的文件。</li><li>Python 插件：通常是一个文件夹或是一个 .py 后缀的文件。</li><li>LL.NET 插件：通常是一个 .dll 后缀的文件。虽然和原生插件后缀相同，但是这种插件必须安装了 LL.NET 插件的依赖才能正常加载和运行。</li></ol><h2 id="安装原生、quickjs、lua、python-单文件插件" tabindex="-1">安装原生、QuickJS、Lua、Python 单文件插件 <a class="header-anchor" href="#安装原生、quickjs、lua、python-单文件插件" aria-label="Permalink to &quot;安装原生、QuickJS、Lua、Python 单文件插件&quot;">​</a></h2><p>将插件的所有文件放入 <code>plugins</code> 文件夹，然后服务器将在下次启动时加载该插件。</p><h2 id="安装-nodejs-插件" tabindex="-1">安装 NodeJS 插件 <a class="header-anchor" href="#安装-nodejs-插件" aria-label="Permalink to &quot;安装 NodeJS 插件&quot;">​</a></h2><p>将插件的所有文件放入 <code>plugins</code> 文件夹中的 <code>nodejs</code> 文件夹，然后服务器将在下次启动时加载该插件。</p><h2 id="安装-python-多文件插件" tabindex="-1">安装 Python 多文件插件 <a class="header-anchor" href="#安装-python-多文件插件" aria-label="Permalink to &quot;安装 Python 多文件插件&quot;">​</a></h2><p>将插件的所有文件放入 <code>plugins</code> 文件夹中的 <code>python</code> 文件夹，然后服务器将在下次启动时加载该插件。</p><h2 id="安装-ll-net-插件" tabindex="-1">安装 LL.NET 插件 <a class="header-anchor" href="#安装-ll-net-插件" aria-label="Permalink to &quot;安装 LL.NET 插件&quot;">​</a></h2><p>TODO</p>',12)]))}const L=a(l,[["render",r]]);export{u as __pageData,L as default};
