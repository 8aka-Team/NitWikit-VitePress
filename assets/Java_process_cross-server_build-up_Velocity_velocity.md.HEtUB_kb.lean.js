import{_ as c,c as p,a5 as t,j as o,a,G as l,w as n,B as i,o as d}from"./chunks/framework.O9ad3XaM.js";const y="/assets/Velocity.BlmMxltA.png",k=JSON.parse('{"title":"Velocity","description":"","frontmatter":{"title":"Velocity","slug":"/velocity","sidebar_position":2},"headers":[],"relativePath":"Java/process/cross-server/build-up/Velocity/velocity.md","filePath":"nitwikit/docs-java/process/cross-server/build-up/Velocity/velocity.md","lastUpdated":1743286570000}'),u={name:"Java/process/cross-server/build-up/Velocity/velocity.md"};function h(v,e,m,g,b,f){const r=i("font"),s=i("nw-image-viewer");return d(),p("div",null,[e[2]||(e[2]=t('<h1 id="velocity" tabindex="-1">Velocity <a class="header-anchor" href="#velocity" aria-label="Permalink to &quot;Velocity&quot;">​</a></h1><p><img src="'+y+'" alt=""></p><p><a href="https://docs.papermc.io/velocity" target="_blank" rel="noreferrer">点此跳转到官方英文文档</a></p><h2 id="关于-velocity-的介绍" tabindex="-1">关于 Velocity 的介绍 <a class="header-anchor" href="#关于-velocity-的介绍" aria-label="Permalink to &quot;关于 Velocity 的介绍&quot;">​</a></h2><h3 id="什么是-velocity" tabindex="-1">什么是 Velocity ？ <a class="header-anchor" href="#什么是-velocity" aria-label="Permalink to &quot;什么是 Velocity ？&quot;">​</a></h3><p>Velocity 可以说是目前最优秀的<strong>Minecraft代理端</strong>之一，由经验丰富的 PaperMC 团队研发，Velocity 拥有先进的转发方式和极高的安全性。与此同时，Velocity 也有优秀的性能表现</p><p>使用 Velocity ，能让你的群组服务器锦上添花</p><p>如果你开的是mod群组服务器，那么强烈推荐使用 Velocity ，因为他对 forge 和 fabric 服务端做了特别的适配</p><p>当然，Mod 服务端原生不支持 Velocity，需要安装让 Mod 端支持 Velocity 的 Mod</p><ul><li><p>Fabric 端支持 Velocity Mod：<a href="https://www.curseforge.com/minecraft/mc-mods/crossstitch" target="_blank" rel="noreferrer">CrossTitch</a></p></li><li><p>Fabric 端支持 Velocity Mod：<a href="https://modrinth.com/mod/fabricproxy-lite" target="_blank" rel="noreferrer">FabricProxy-Lite</a></p></li><li><p>Forge 端支持 Velocity Mod：<a href="https://modrinth.com/mod/proxy-compatible-forge" target="_blank" rel="noreferrer">Proxy Compatible Forge</a></p></li></ul><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><ol><li>Q： velocity 支持 Bungeecord 和 Waterfall 插件吗？</li></ol><p>A： 不支持，因为如果支持 BungeeCord 插件的话，那么很多 Velocity 的功能就无从实现了。</p><p>但是有些插件可能同时也支持 Velocity 或者有 Velocity 的版本。并且，有些 BungeeCord 插件仅要求在子服务器安装，那么这些插件理论上也是可以在 Velocity 为基础的代理服务器上使用的</p><ol start="2"><li>Q： 我应当使用哪个版本的 Java 来运行 Velocity</li></ol><p>A: 推荐你使用 Java 17 以及以上版本的 Java ，如 Java 21</p><ol start="3"><li>Q： 为什么我的玩家连不进服务器？**</li></ol>',17)),o("p",null,[e[1]||(e[1]=a("A: ")),o("em",null,[l(r,{color:"gray"},{default:n(()=>e[0]||(e[0]=[a("这里是一些可能的原因")])),_:1})])]),e[3]||(e[3]=t(`<p>首先，你需要检查：</p><ul><li>你有没有把子服务器打开，控制台有没有未响应？</li><li>代理端打开没？</li><li>是否将代理端和子服务器链接，也就是有没有在代理端设置子服务器 IP 和端口以及子服务器有没有启用 Velocity 功能</li></ul><p>此外，这是一些常见的代理端报错：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Can&#39;t connect to server lobby： If you wish to use IP forwarding， please enable it in your Bungeecord config as well!</span></span></code></pre></div><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Can&#39;t connect to server lobby： Your server did not send a forwarding request to the proxy. Is it set up correctly?</span></span></code></pre></div><p>这些报错是你不正确配置代理端引起的 <a href="./velocity.toml">点此前往了解velocity配置</a></p><p>此外，如果你同时启用了 BungeeCord 模式，也会报出以上错误，如果你使用 Velocity ，那么请务必关闭 BungeeCord 模式</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Can&#39;t connect to server lobby： This server requires you to connect with Velocity.</span></span></code></pre></div><p>这条报错出现的原因是你在子服务器上启用了 Velocity ，但是却没有在 Velocity 上添加此子服务器，请检查你的 Velocity 配置</p><ol start="4"><li>Q： 为什么会出现 Invalid payload REGISTER</li></ol><p>A: 如果你的服务器会出现这种情况：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[server connection] player1 -&gt; hub has connected</span></span>
<span class="line"><span>[connected player] player1 (/localhost：58943)： kicked from server hub： Invalid payload REGISTER!</span></span></code></pre></div><p>这种情况一般发生在插件服群组中。当有些人使用 Mod 客户端进入服务器时，有可能出现这种问题。</p><p>如果你使用 Paper (或者其他 Fork 版本) 1.12.2或者以上的服务端，你可以在启动脚本中添加 flag <code>-Dpaper.disableChannelLimit=true</code> 来解决这个问题</p><p><s>虽然没什么人遇到这个问题就是了</s></p><ol start="5"><li>Q： 在加入到 Froge 服务器时 readTimeout</li></ol><p>A: 一句话， Mod 太多太大导致连接时间延长了。 你可以减少服务器的 Mod 数量或者在 Velocity 配置文件中设置 <code>read-timeout</code> 的值，同时在你的 Forge 子服的启动参数中添加 <code>-Dfml.readTimeout</code> 参数来提高阈值。 比如，你想设置你的 readTimeout 时间到 120 秒 那么你可以设置：</p><p><code>read-timeout = 120000</code> (单位：毫秒)</p><p><code>-Dfml.readTimeout=120</code> (单位：秒)</p><p>这样，将服务器重启后，readTimeout 时间就拉长了，下次就可以正常进入服务器了</p><ol start="6"><li>Q： 我可以每个子服都使用不同的转发模式吗？</li></ol><p>A: 不行，至少现在不行，你只能在 <code>velocity.toml</code> 中设置一个单一的转发模式</p><p>关于各个不同的转发模式，可以看到这里 <a href="./build-up#子服配置">搭建</a></p><p>有大佬提出了关于这个问题的 <a href="https://github.com/PaperMC/Velocity/pull/1357" target="_blank" rel="noreferrer">PR</a></p><p>可以坐等合并了，合并之后就可以给各个不同的子服配置不同的转发模式啦</p>`,25)),l(s)])}const x=c(u,[["render",h]]);export{k as __pageData,x as default};
