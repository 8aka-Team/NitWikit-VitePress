import{_ as i,c as a,a5 as n,o as l}from"./chunks/framework.O9ad3XaM.js";const g=JSON.parse('{"title":"使用终端构建","description":"","frontmatter":{"title":"使用终端构建","sidebar_position":5},"headers":[],"relativePath":"Java/process/plugin/more/plugin-build/terminal-build.md","filePath":"nitwikit/docs-java/process/plugin/more/plugin-build/terminal-build.md","lastUpdated":1738042730000}'),e={name:"Java/process/plugin/more/plugin-build/terminal-build.md"};function p(t,s,h,k,d,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="使用终端构建" tabindex="-1">使用终端构建 <a class="header-anchor" href="#使用终端构建" aria-label="Permalink to &quot;使用终端构建&quot;">​</a></h1><h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h2><h3 id="_1-安装jdk" tabindex="-1">1. 安装JDK <a class="header-anchor" href="#_1-安装jdk" aria-label="Permalink to &quot;1. 安装JDK&quot;">​</a></h3><ol><li><p><strong>Windows</strong>：</p><ul><li>从<a href="https://nitwikit.8aka.org/preparation/java/choose-and-download-and-install-java" target="_blank" rel="noreferrer">JDK选择</a>选择并下载jdk</li><li>按照提示完成安装</li><li>配置<a href="https://nitwikit.8aka.org/preparation/java/environment" target="_blank" rel="noreferrer">环境变量</a></li><li>验证安装： <ol><li>按 <code>Win + R</code>，输入 <code>cmd</code> 打开终端</li><li>输入 <code>java -version</code></li><li>如果看到类似下面的输出，说明安装成功：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.8.0_301&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Java(TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) SE Runtime Environment (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.8.0_301-b09</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HotSpot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">64-Bit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (build </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">25.301-b09,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ol></li></ul></li><li><p><strong>Linux</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                    # 更新软件源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-8-jdk</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 安装JDK 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CentOS系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java-1.8.0-openjdk-devel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span></code></pre></div></li></ol><h3 id="_2-安装构建工具" tabindex="-1">2. 安装构建工具 <a class="header-anchor" href="#_2-安装构建工具" aria-label="Permalink to &quot;2. 安装构建工具&quot;">​</a></h3><ol><li><p><strong>Maven</strong>：</p><ul><li><p><strong>Windows</strong>：</p><ol><li>访问<a href="https://maven.apache.org/download.cgi" target="_blank" rel="noreferrer">Maven官网</a>下载最新版本</li><li>下载 <code>apache-maven-x.x.x-bin.zip</code>（x.x.x是版本号）</li><li>解压到合适位置（建议：<code>C:\\Program Files\\Apache\\maven</code>）</li><li>配置<a href="https://nitwikit.8aka.org/preparation/java/environment" target="_blank" rel="noreferrer">环境变量</a>： <ul><li>新建系统变量 <code>MAVEN_HOME</code>，值为Maven解压目录</li><li>在 <code>Path</code> 变量末尾添加 <code>;%MAVEN_HOME%\\bin</code></li></ul></li><li>验证安装：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span></code></pre></div></li></ol></li><li><p><strong>Linux</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maven</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CentOS系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maven</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span></code></pre></div></li></ul></li><li><p><strong>Gradle</strong>（可选，如果项目使用Gradle）：</p><ul><li><p><strong>Windows</strong>：</p><ol><li>访问<a href="https://gradle.org/releases/" target="_blank" rel="noreferrer">Gradle官网</a>下载最新版本</li><li>下载 <code>gradle-x.x.x-bin.zip</code>（x.x.x是版本号）</li><li>解压到合适位置（建议：<code>C:\\Program Files\\Gradle</code>）</li><li>配置环境变量： <ul><li>新建系统变量 <code>GRADLE_HOME</code>，值为Gradle解压目录</li><li>在 <code>Path</code> 变量末尾添加 <code>;%GRADLE_HOME%\\bin</code></li></ul></li><li>验证安装：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradle</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span></code></pre></div></li></ol></li><li><p><strong>Linux</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用SDKMAN安装（推荐）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://get.sdkman.io&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 安装SDKMAN</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman/bin/sdkman-init.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 初始化SDKMAN</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gradle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                         # 安装Gradle</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradle</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -version</span></span></code></pre></div></li></ul></li></ol><h2 id="maven构建步骤" tabindex="-1">Maven构建步骤 <a class="header-anchor" href="#maven构建步骤" aria-label="Permalink to &quot;Maven构建步骤&quot;">​</a></h2><h3 id="_1-进入项目目录" tabindex="-1">1. 进入项目目录 <a class="header-anchor" href="#_1-进入项目目录" aria-label="Permalink to &quot;1. 进入项目目录&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows示例（如果项目在D盘的minecraft文件夹）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minecraft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lugins</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yPlugin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS示例</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/minecraft/plugins/MyPlugin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证是否在正确目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                  # Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   # Linux/macOS</span></span></code></pre></div><p>确保你能看到 <code>pom.xml</code> 文件在当前目录。</p><h3 id="_2-清理旧文件" tabindex="-1">2. 清理旧文件 <a class="header-anchor" href="#_2-清理旧文件" aria-label="Permalink to &quot;2. 清理旧文件&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span></span></code></pre></div><p>这个命令会：</p><ul><li>删除 <code>target</code> 目录及其所有内容</li><li>清理之前的构建结果</li><li>为新的构建做准备</li></ul><h3 id="_3-打包项目" tabindex="-1">3. 打包项目 <a class="header-anchor" href="#_3-打包项目" aria-label="Permalink to &quot;3. 打包项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方式1：常规打包（包含测试）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方式2：跳过测试打包（更快）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DskipTests</span></span></code></pre></div><p>在打包过程中你会看到：</p><ul><li>下载依赖的进度</li><li>编译代码的信息</li><li>运行测试的结果（如果没有跳过测试）</li><li>最后显示 <code>BUILD SUCCESS</code> 表示构建成功</li></ul><h3 id="_4-找到构建结果" tabindex="-1">4. 找到构建结果 <a class="header-anchor" href="#_4-找到构建结果" aria-label="Permalink to &quot;4. 找到构建结果&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">explorer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span></span></code></pre></div><p>jar文件通常命名为：<code>项目名-版本号.jar</code></p><h2 id="gradle构建步骤" tabindex="-1">Gradle构建步骤 <a class="header-anchor" href="#gradle构建步骤" aria-label="Permalink to &quot;Gradle构建步骤&quot;">​</a></h2><h3 id="_1-使用gradle-wrapper-推荐" tabindex="-1">1. 使用Gradle Wrapper（推荐） <a class="header-anchor" href="#_1-使用gradle-wrapper-推荐" aria-label="Permalink to &quot;1. 使用Gradle Wrapper（推荐）&quot;">​</a></h3><p>Wrapper是项目专用的Gradle启动器，不需要本地安装Gradle。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows系统</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果是第一次运行，可能需要下载Gradle</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradlew.bat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./gradlew</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 给予执行权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 清理并构建</span></span></code></pre></div><h3 id="_2-使用全局gradle" tabindex="-1">2. 使用全局Gradle <a class="header-anchor" href="#_2-使用全局gradle" aria-label="Permalink to &quot;2. 使用全局Gradle&quot;">​</a></h3><p>如果项目没有Wrapper或者你想使用本地安装的Gradle：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h3 id="_3-找到构建结果" tabindex="-1">3. 找到构建结果 <a class="header-anchor" href="#_3-找到构建结果" aria-label="Permalink to &quot;3. 找到构建结果&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ibs</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">explorer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ibs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build/libs</span></span></code></pre></div><h2 id="常见问题解决" tabindex="-1">常见问题解决 <a class="header-anchor" href="#常见问题解决" aria-label="Permalink to &quot;常见问题解决&quot;">​</a></h2><h3 id="_1-依赖下载失败" tabindex="-1">1. 依赖下载失败 <a class="header-anchor" href="#_1-依赖下载失败" aria-label="Permalink to &quot;1. 依赖下载失败&quot;">​</a></h3><p>如果看到类似 <code>Could not resolve dependency</code> 的错误：</p><ol><li><p><strong>配置镜像源</strong>： 参考<a href="./mirror-config">配置镜像源</a>文档进行配置。</p></li><li><p><strong>手动下载依赖</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Maven项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dependency:get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DgroupId=组ID</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DartifactId=项目ID</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Dversion=版本号</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例：下载Paper API</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dependency:get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DgroupId=io.papermc.paper</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DartifactId=paper-api</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Dversion=1.19.4-R0.1-SNAPSHOT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Gradle项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradle</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --refresh-dependencies</span></span></code></pre></div></li></ol><h3 id="_2-内存不足" tabindex="-1">2. 内存不足 <a class="header-anchor" href="#_2-内存不足" aria-label="Permalink to &quot;2. 内存不足&quot;">​</a></h3><p>如果看到 <code>OutOfMemoryError</code> 错误：</p><ol><li><p><strong>Maven项目</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows（在cmd中运行）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAVEN_OPTS=-Xmx512m</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果512m不够，可以设置更大，如-Xmx1024m</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAVEN_OPTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-Xmx512m&quot;</span></span></code></pre></div></li><li><p><strong>Gradle项目</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GRADLE_OPTS=-Xmx512m</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GRADLE_OPTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-Xmx512m&quot;</span></span></code></pre></div></li></ol><h3 id="_3-编码问题" tabindex="-1">3. 编码问题 <a class="header-anchor" href="#_3-编码问题" aria-label="Permalink to &quot;3. 编码问题&quot;">​</a></h3><p>如果看到 <code>编码GBK的不可映射字符</code> 等错误：</p><ol><li><p><strong>Maven项目</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在运行时指定编码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Dfile.encoding=UTF-8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span></span></code></pre></div></li><li><p><strong>Gradle项目</strong>： 在 <code>build.gradle</code> 中添加：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">withType(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JavaCompile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">encoding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;UTF-8&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h3 id="_4-其他常见错误" tabindex="-1">4. 其他常见错误 <a class="header-anchor" href="#_4-其他常见错误" aria-label="Permalink to &quot;4. 其他常见错误&quot;">​</a></h3><ol><li><p><strong>找不到JAVA_HOME</strong>：</p><ul><li>检查环境变量是否正确设置</li><li>重新打开终端让环境变量生效</li></ul></li><li><p><strong>找不到mvn/gradle命令</strong>：</p><ul><li>检查环境变量是否正确设置</li><li>确认安装路径是否正确</li><li>尝试重新安装构建工具</li></ul></li><li><p><strong>构建失败但没有明显错误</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Maven项目，使用debug模式构建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Gradle项目，使用debug模式构建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gradle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug</span></span></code></pre></div></li></ol>`,42)]))}const c=i(e,[["render",p]]);export{g as __pageData,c as default};
