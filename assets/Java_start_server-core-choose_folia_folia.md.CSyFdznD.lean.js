import{_ as l,c as t,a5 as r,b as s,w as e,a6 as n,j as p,B as d,o,G as E,a as c}from"./chunks/framework.O9ad3XaM.js";const k=JSON.parse('{"title":"Folia","description":"","frontmatter":{"title":"Folia","slug":"folia","sidebar_position":4},"headers":[],"relativePath":"Java/start/server-core-choose/folia/folia.md","filePath":"nitwikit/docs-java/start/server-core-choose/folia/folia.md","lastUpdated":1732927941000}'),B={name:"Java/start/server-core-choose/folia/folia.md"};function h(u,a,A,f,F,m){const i=d("Mermaid");return o(),t("div",null,[a[1]||(a[1]=r('<h1 id="folia" tabindex="-1">Folia <a class="header-anchor" href="#folia" aria-label="Permalink to &quot;Folia&quot;">​</a></h1><p>Folia 是 Paper 的一个分支，由 Minecraft 优化 BOSS Spottedleaf 开发。</p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><h3 id="好处" tabindex="-1">好处 <a class="header-anchor" href="#好处" aria-label="Permalink to &quot;好处&quot;">​</a></h3><p>Folia 与 Vanilla 最大的不同在于 Tick 不再有主线程，而是将区块进行分组，每个独立的区域都有自己的 Tick Loop</p><p>如果你无法理解这段话，你可以看这样子做的好处:</p><p>现在有一个地图，有四个区块，分别是A，B，C，D</p><p>小明在 A 处建造了一个卡服机，能把服务器 TPS 干到 10 以下的那种</p><p>如果是 Paper(或者Purpur及其分支)，那么 A，B，C，D 四处的 TPS 都会掉到 10 以下</p><p>但如果我们用 Folia (假设ABCD分在不同的Region)，那么只有 A 处的 TPS 会掉到 10 以下，B，C，D 的 TPS 仍然不受影响</p><p>并且 Folia 可以更好的利用 CPU 多核</p><h3 id="坏处" tabindex="-1">坏处 <a class="header-anchor" href="#坏处" aria-label="Permalink to &quot;坏处&quot;">​</a></h3><p>Folia 完全破坏了 Bukkit 插件的兼容性，每个 Bukkit 插件都必须为 Folia 做兼容(有专门的 Fork 为 Folia 做 Bukkit 插件兼容，后面会讲)，所以，Folia 目前只支持很少插件</p><h2 id="要求" tabindex="-1">要求 <a class="header-anchor" href="#要求" aria-label="Permalink to &quot;要求&quot;">​</a></h2><p>Folia 这么好，但并不是每个服务器都可以体验的，你需要确保你的服务器符合以下条件，这样才可以从 Folia 中受益</p><ul><li>16个<strong>物理</strong>CPU核心</li><li>玩家较为分散(生存多人游戏、无政府、空岛或一些迷你游戏服务器)</li><li>你需要的插件支持 Folia</li></ul><p>如果你不符合，去用 Leaf 吧，符合的话继续看下去!</p><h2 id="选择" tabindex="-1">选择 <a class="header-anchor" href="#选择" aria-label="Permalink to &quot;选择&quot;">​</a></h2><p>Folia 有许多分支,你可能不知道怎么选,有个简单的办法:</p>',19)),(o(),s(n,null,{default:e(()=>[E(i,{id:"mermaid-71",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20A%5BFolia%5D%0A%20%20%20%20A%20--%3E%20B%5B%E5%BF%AB%E9%80%9F%E5%8D%87%E5%88%B0%E9%AB%98%E7%89%88%E6%9C%AC%5D%0A%20%20%20%20A%20--%3E%20C%5B%E6%80%A7%E8%83%BD%2C%E7%A8%B3%E5%AE%9A%E6%80%A7%E5%92%8C%E5%8A%9F%E8%83%BD%5D%0A%20%20%20%20A%20--%3E%20D%5B%E6%8F%92%E4%BB%B6%E5%85%BC%E5%AE%B9%E6%80%A7%5D%0A%20%20%20%20B%20--%3E%20DeerFolia%0A%20%20%20%20C%20--%3E%20E%5B1.20.4%2B%5D%20--%3E%20Luminol%0A%20%20%20%20C%20--%3E%20F%5B1.20%2F2%5D%20--%3E%20Molia%0A%20%20%20%20C%20--%3E%20G%5B1.19.3%2F4%5D%20--%3E%20Kaiiju%0A%20%20%20%20D%20--%3E%201.20.4%2B%20--%3E%20LightingLuminol%0A%20%20%20%20D%20--%3E%201.20%2F2%20--%3E%20DirtyMolia%0A%20%20%20%20D%20--%3E%201.19.3%2F4%20--%3E%20DirtyFolia%0A"})]),fallback:e(()=>a[0]||(a[0]=[c(" Loading... ")])),_:1})),a[2]||(a[2]=p("p",null,"根据这张图表选好后去下载就可以了",-1))])}const C=l(B,[["render",h]]);export{k as __pageData,C as default};
