import{_ as a,c as i,a5 as n,o as l}from"./chunks/framework.O9ad3XaM.js";const o=JSON.parse('{"title":"概述","description":"","frontmatter":{"title":"概述","sidebar_position":2},"headers":[],"relativePath":"Java/process/plugin/more/plugin-build/first.md","filePath":"nitwikit/docs-java/process/plugin/more/plugin-build/first.md","lastUpdated":1738604899000}'),p={name:"Java/process/plugin/more/plugin-build/first.md"};function e(t,s,h,r,k,d){return l(),i("div",null,s[0]||(s[0]=[n(`<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><h2 id="什么是构建" tabindex="-1">什么是构建？ <a class="header-anchor" href="#什么是构建" aria-label="Permalink to &quot;什么是构建？&quot;">​</a></h2><p>构建就是将源代码转换成可以运行的插件（jar文件）的过程。就像把散落的零件组装成一个完整的机器一样。</p><h2 id="选择合适的构建方式" tabindex="-1">选择合适的构建方式 <a class="header-anchor" href="#选择合适的构建方式" aria-label="Permalink to &quot;选择合适的构建方式&quot;">​</a></h2><p>根据你的情况，可以选择以下三种方式之一：</p><ol><li><p><strong>使用 IDEA（推荐）</strong></p><ul><li>适合：新手，不熟悉命令行的用户</li><li>优点：图形界面，操作直观</li><li>缺点：需要安装 IDEA</li></ul></li><li><p><strong>使用终端</strong></p><ul><li>适合：熟悉命令行的用户，服务器环境</li><li>优点：轻量级，适合自动化</li><li>缺点：需要记忆命令</li></ul></li><li><p><strong>使用 GitHub Actions</strong></p><ul><li>适合：需要自动化发布的项目</li><li>优点：全自动化，不需要本地构建</li><li>缺点：需要了解 GitHub 相关知识</li></ul></li></ol><h2 id="选择构建工具" tabindex="-1">选择构建工具 <a class="header-anchor" href="#选择构建工具" aria-label="Permalink to &quot;选择构建工具&quot;">​</a></h2><p>项目可能使用以下两种构建工具之一：</p><ol><li><p><strong>Maven</strong></p><ul><li>特点：配置简单，学习曲线平缓</li><li>适合：新手，小型项目</li><li>配置文件：<code>pom.xml</code></li></ul></li><li><p><strong>Gradle</strong></p><ul><li>特点：功能强大，配置灵活</li><li>适合：大型项目，需要复杂构建逻辑</li><li>配置文件：<code>build.gradle</code></li></ul></li></ol><h2 id="识别项目类型" tabindex="-1">识别项目类型 <a class="header-anchor" href="#识别项目类型" aria-label="Permalink to &quot;识别项目类型&quot;">​</a></h2><h3 id="如何识别" tabindex="-1">如何识别？ <a class="header-anchor" href="#如何识别" aria-label="Permalink to &quot;如何识别？&quot;">​</a></h3><p>在项目根目录下查看：</p><ol><li><p><strong>如果看到 <code>pom.xml</code></strong></p><ul><li>这是 Maven 项目</li><li>构建产物在 <code>target</code> 目录</li><li>使用 <code>mvn</code> 命令构建</li></ul></li><li><p><strong>如果看到 <code>build.gradle</code></strong></p><ul><li>这是 Gradle 项目</li><li>构建产物在 <code>build/libs</code> 目录</li><li>使用 <code>gradle</code> 命令构建</li></ul></li><li><p><strong>如果看到 <code>gradlew</code> 或 <code>gradlew.bat</code></strong></p><ul><li>这是带有 Gradle Wrapper 的 Gradle 项目</li><li>特点： <ul><li>不需要安装 Gradle</li><li>自动下载正确版本</li><li>所有人使用相同版本</li></ul></li></ul></li></ol><h3 id="项目结构说明" tabindex="-1">项目结构说明 <a class="header-anchor" href="#项目结构说明" aria-label="Permalink to &quot;项目结构说明&quot;">​</a></h3><h4 id="maven项目结构" tabindex="-1">Maven项目结构 <a class="header-anchor" href="#maven项目结构" aria-label="Permalink to &quot;Maven项目结构&quot;">​</a></h4><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>项目根目录</span></span>
<span class="line"><span>├── src/                                       # 源代码目录</span></span>
<span class="line"><span>│   ├── main/                                  # 主要代码目录</span></span>
<span class="line"><span>│   │   ├── java/                              # Java源代码</span></span>
<span class="line"><span>│   │   │   └── com/</span></span>
<span class="line"><span>│   │   │       └── example/</span></span>
<span class="line"><span>│   │   │           └── plugin/</span></span>
<span class="line"><span>│   │   │               ├── Main.java          # 插件主类</span></span>
<span class="line"><span>│   │   │               ├── commands/          # 命令类</span></span>
<span class="line"><span>│   │   │               ├── listeners/         # 监听器类</span></span>
<span class="line"><span>│   │   │               └── utils/             # 工具类</span></span>
<span class="line"><span>│   │   └── resources/                         # 资源文件目录</span></span>
<span class="line"><span>│   │       ├── plugin.yml                     # 插件配置文件</span></span>
<span class="line"><span>│   │       ├── config.yml                     # 插件默认配置</span></span>
<span class="line"><span>│   │       └── messages/                      # 语言文件</span></span>
<span class="line"><span>│   └── test/                                  # 测试代码目录</span></span>
<span class="line"><span>│       ├── java/                              # 测试源代码</span></span>
<span class="line"><span>│       └── resources/                         # 测试资源</span></span>
<span class="line"><span>├── target/                                    # 构建输出目录</span></span>
<span class="line"><span>├── pom.xml                                    # Maven项目配置文件</span></span>
<span class="line"><span>└── README.md                                  # 项目说明文件</span></span></code></pre></div><h4 id="gradle项目结构" tabindex="-1">Gradle项目结构 <a class="header-anchor" href="#gradle项目结构" aria-label="Permalink to &quot;Gradle项目结构&quot;">​</a></h4><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>项目根目录</span></span>
<span class="line"><span>├── src/                                       # 源代码目录</span></span>
<span class="line"><span>│   ├── main/                                  # 主要代码目录</span></span>
<span class="line"><span>│   │   ├── java/                              # Java源代码</span></span>
<span class="line"><span>│   │   │   └── com/</span></span>
<span class="line"><span>│   │   │       └── example/</span></span>
<span class="line"><span>│   │   │           └── plugin/</span></span>
<span class="line"><span>│   │   │               ├── Main.java          # 插件主类</span></span>
<span class="line"><span>│   │   │               ├── commands/          # 命令类</span></span>
<span class="line"><span>│   │   │               ├── listeners/         # 监听器类</span></span>
<span class="line"><span>│   │   │               └── utils/             # 工具类</span></span>
<span class="line"><span>│   │   ├── kotlin/                            # Kotlin源代码（如果使用）</span></span>
<span class="line"><span>│   │   └── resources/                         # 资源文件目录</span></span>
<span class="line"><span>│   │       ├── plugin.yml                     # 插件配置文件</span></span>
<span class="line"><span>│   │       ├── config.yml                     # 插件默认配置</span></span>
<span class="line"><span>│   │       └── messages/                      # 语言文件</span></span>
<span class="line"><span>│   └── test/                                  # 测试代码目录</span></span>
<span class="line"><span>│       ├── java/                              # 测试源代码</span></span>
<span class="line"><span>│       ├── kotlin/                            # Kotlin测试代码</span></span>
<span class="line"><span>│       └── resources/                         # 测试资源</span></span>
<span class="line"><span>├── build/                                     # 构建输出目录</span></span>
<span class="line"><span>│   └── libs/                                  # 构建产物（jar文件）</span></span>
<span class="line"><span>├── gradle/                                    # Gradle包装器目录</span></span>
<span class="line"><span>│   └── wrapper/</span></span>
<span class="line"><span>├── build.gradle                               # Gradle构建脚本</span></span>
<span class="line"><span>├── settings.gradle                            # Gradle设置文件</span></span>
<span class="line"><span>├── gradlew                                    # Gradle包装器脚本(Unix)</span></span>
<span class="line"><span>├── gradlew.bat                                # Gradle包装器脚本(Windows)</span></span>
<span class="line"><span>└── README.md                                  # 项目说明文件</span></span></code></pre></div><h3 id="重要文件说明" tabindex="-1">重要文件说明 <a class="header-anchor" href="#重要文件说明" aria-label="Permalink to &quot;重要文件说明&quot;">​</a></h3><h4 id="_1-配置文件" tabindex="-1">1. 配置文件 <a class="header-anchor" href="#_1-配置文件" aria-label="Permalink to &quot;1. 配置文件&quot;">​</a></h4><ul><li><p><strong>plugin.yml</strong>：插件的核心配置文件</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MyPlugin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 插件名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0.0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # 插件版本</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.example.plugin.Main</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 主类路径</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">api-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.19&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # API版本</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">commands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 命令配置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  mycmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">示例命令</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    usage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/mycmd &lt;参数&gt;</span></span></code></pre></div></li><li><p><strong>config.yml</strong>：插件的默认配置文件</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">zh_CN</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">features</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  feature1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  feature2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div></li></ul><h4 id="_2-构建配置文件" tabindex="-1">2. 构建配置文件 <a class="header-anchor" href="#_2-构建配置文件" aria-label="Permalink to &quot;2. 构建配置文件&quot;">​</a></h4><ul><li><p><strong>Maven (pom.xml)</strong>：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;io.papermc.paper&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;paper-api&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.19.4-R0.1-SNAPSHOT&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;provided&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>Gradle (build.gradle)</strong>：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    compileOnly </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul>`,23)]))}const g=a(p,[["render",e]]);export{o as __pageData,g as default};
