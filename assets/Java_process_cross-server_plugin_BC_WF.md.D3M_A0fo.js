import{_ as r,c as a,a5 as o,o as t}from"./chunks/framework.O9ad3XaM.js";const u=JSON.parse('{"title":"BungeeCord 端","description":"","frontmatter":{"title":"BungeeCord 端","sidebar_position":1},"headers":[],"relativePath":"Java/process/cross-server/plugin/BC&WF.md","filePath":"nitwikit/docs-java/process/cross-server/plugin/BC&WF.md","lastUpdated":1735421012000}'),i={name:"Java/process/cross-server/plugin/BC&WF.md"};function l(s,e,p,n,c,h){return t(),a("div",null,e[0]||(e[0]=[o('<h1 id="bungeecord-端" tabindex="-1">BungeeCord 端 <a class="header-anchor" href="#bungeecord-端" aria-label="Permalink to &quot;BungeeCord 端&quot;">​</a></h1><p>支持 <em>BungeeCord/Waterfall</em> 的插件</p><h3 id="只安装在跨服端" tabindex="-1">只安装在跨服端 <a class="header-anchor" href="#只安装在跨服端" aria-label="Permalink to &quot;只安装在跨服端&quot;">​</a></h3><h3 id="huskchat" tabindex="-1">HuskChat <a class="header-anchor" href="#huskchat" aria-label="Permalink to &quot;HuskChat&quot;">​</a></h3><p>同 <a href="./velocity#huskchat">Velocity 一侧的讲解</a></p><h3 id="sonar" tabindex="-1">Sonar <a class="header-anchor" href="#sonar" aria-label="Permalink to &quot;Sonar&quot;">​</a></h3><p>同 <a href="./velocity#sonar">Velocity 一侧的讲解</a></p><h3 id="authmebungee" tabindex="-1">AuthMeBungee <a class="header-anchor" href="#authmebungee" aria-label="Permalink to &quot;AuthMeBungee&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>SpigotMC</code> <a href="https://www.spigotmc.org/resources/.50219/" target="_blank" rel="noreferrer">https://www.spigotmc.org/resources/.50219/</a></p><p><code>GitHub</code> <a href="https://github.com/AuthMe/AuthMeBungee" target="_blank" rel="noreferrer">https://github.com/AuthMe/AuthMeBungee</a></p></div><p>这是 BungeeCord 版本的 AuthMe 。如果你的登录服使用 AuthMe 登录，请务必在 BungeeCord 上安装此插件，以增加登录系统的安全性和完整性，这可以为你避免一些不必要的麻烦</p><p>如果你不安装此插件，在玩家登录时很可能乘此跳到其他子服务器来跳过登录，以此获取管理员账号来炸服</p><h2 id="可安装在跨服端或子服" tabindex="-1">可安装在跨服端或子服 <a class="header-anchor" href="#可安装在跨服端或子服" aria-label="Permalink to &quot;可安装在跨服端或子服&quot;">​</a></h2><p>这一分类中的插件有单端版和跨服端版，你可以删除单端版使用跨服端版。</p><h3 id="minimotd" tabindex="-1">MiniMOTD <a class="header-anchor" href="#minimotd" aria-label="Permalink to &quot;MiniMOTD&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>SpigotMC</code> <a href="https://www.spigotmc.org/resources/.81254/" target="_blank" rel="noreferrer">https://www.spigotmc.org/resources/.81254/</a></p><p><code>GitHub</code> <a href="https://github.com/jpenilla/MiniMOTD/" target="_blank" rel="noreferrer">https://github.com/jpenilla/MiniMOTD/</a></p><p><code>modrinth</code> <a href="https://modrinth.com/plugin/minimotd" target="_blank" rel="noreferrer">https://modrinth.com/plugin/minimotd</a></p></div><p>:::danger[缺点]</p><p>暂未发现。</p><p>:::</p><h3 id="viaversion" tabindex="-1">ViaVersion <a class="header-anchor" href="#viaversion" aria-label="Permalink to &quot;ViaVersion&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>见 <a href="/docs-java/process/plugin/other/Via/Via">这里</a></p></div><p>:::danger[缺点]</p><p>由于 Velocity/BungeeCord 本身即设计为可以沟通多个不同版本服务器的代理端解决方案，因此虽然 ViaVersion 系列能够安装在代理端上，但是<strong>强烈不建议直接在代理上使用 ViaVersion</strong>。如果你执意这么做，请做好以下心理准备：</p><ul><li>反作弊插件不生效。</li><li>核心数据包处理出现大量异常。</li><li>代理端性能下降。</li><li>你不会获得因使用 ViaVersion 导致问题的任何技术支持。</li></ul><p>:::</p><h3 id="geyser" tabindex="-1">Geyser <a class="header-anchor" href="#geyser" aria-label="Permalink to &quot;Geyser&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>见 <a href="/docs-java/process/mobile-player/Geyser/introduction/overview">这里</a></p></div><p>:::danger[缺点]</p><ul><li>大部分反作弊可能并未兼容。</li><li>基岩版 UI 可能无法使用</li><li>不方便单端判断 BE 玩家</li><li>其他的潜在问题……</li></ul><p>:::</p><h2 id="装在跨服端或-子服端" tabindex="-1">装在跨服端或+子服端 <a class="header-anchor" href="#装在跨服端或-子服端" aria-label="Permalink to &quot;装在跨服端或+子服端&quot;">​</a></h2><p>这类插件可以只装在跨服端，但同时在子服安装可以有更多的功能。</p><h3 id="playerbalancer" tabindex="-1">PlayerBalancer <a class="header-anchor" href="#playerbalancer" aria-label="Permalink to &quot;PlayerBalancer&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>SpigotMC</code> <a href="https://www.spigotmc.org/resources/.55011/" target="_blank" rel="noreferrer">https://www.spigotmc.org/resources/.55011/</a></p><p><code>GitHub</code> <a href="https://github.com/BGHDDevelopment/PlayerBalancer" target="_blank" rel="noreferrer">https://github.com/BGHDDevelopment/PlayerBalancer</a></p><p><code>modrinth</code> <a href="https://modrinth.com/plugin/minimotd" target="_blank" rel="noreferrer">https://modrinth.com/plugin/minimotd</a></p></div><p>可以用来设置多个子大厅，设置主大厅，并按照你配置的方式发送玩家到子服。</p><h3 id="serverutils" tabindex="-1">ServerUtils <a class="header-anchor" href="#serverutils" aria-label="Permalink to &quot;ServerUtils&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p>见 <a href="/docs-java/process/plugin/ManageTool/PluginManagement/ServerUtils">插件 | ServerUtils</a></p></div><h3 id="skinsrestorer" tabindex="-1">SkinsRestorer <a class="header-anchor" href="#skinsrestorer" aria-label="Permalink to &quot;SkinsRestorer&quot;">​</a></h3><p><a href="/docs-java/process/plugin/other/SkinsRestorer">插件 | 皮肤 - skinsRestorer</a></p><p>SkinRestorer 拥有完善的 Proxy Mode 以支持在代理服与字符同时部署，其本身作为老牌皮肤插件并无其他明显缺点。</p><h3 id="tab" tabindex="-1">Tab <a class="header-anchor" href="#tab" aria-label="Permalink to &quot;Tab&quot;">​</a></h3><p>同 <a href="./velocity#tab">Velocity 一侧的讲解</a></p><h2 id="装在跨服端-子服端" tabindex="-1">装在跨服端+子服端 <a class="header-anchor" href="#装在跨服端-子服端" aria-label="Permalink to &quot;装在跨服端+子服端&quot;">​</a></h2><p>这类插件必须要同时安装在跨服端和子服。</p><h3 id="papiproxybridge" tabindex="-1">PAPIProxyBridge <a class="header-anchor" href="#papiproxybridge" aria-label="Permalink to &quot;PAPIProxyBridge&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>spigot</code> <a href="https://www.spigotmc.org/resources/papiproxybridge.108415/" target="_blank" rel="noreferrer">https://www.spigotmc.org/resources/papiproxybridge.108415/</a></p><p><code>GitHub</code> <a href="https://github.com/WiIIiam278/PAPIProxyBridge" target="_blank" rel="noreferrer">https://github.com/WiIIiam278/PAPIProxyBridge</a></p><p><code>modrinth</code> <a href="https://modrinth.com/plugin/papiproxybridge" target="_blank" rel="noreferrer">https://modrinth.com/plugin/papiproxybridge</a></p><p><code>官方文档</code> <a href="https://william278.net/project/papiproxybridge" target="_blank" rel="noreferrer">https://william278.net/project/papiproxybridge</a></p></div><p>PAPIProxyBridge 是安装在后端和代理服务器上的库桥插件，它允许代理端插件使用 PlaceholderAPI 占位符设置文本格式</p><p>在 Spigot (1.16.5+) 上安装最新版本的插件以及 <a href="https://www.spigotmc.org/resources/placeholderapi.6245/" target="_blank" rel="noreferrer">PlaceholderAPI</a> 插件， 或在 Fabric (1.19.3+) 服务器上安装 <a href="https://placeholders.pb4.eu/" target="_blank" rel="noreferrer">PlaceholderAPI mod</a>，然后在 BungeeCord 或 Velocity 代理服务器上安装该插件</p><p>请注意，此插件不能替代 PlaceholderAPI。你仍然需要在 Spigot/Fabric 服务器上安装 PlaceholderAPI</p>',48)]))}const g=r(i,[["render",l]]);export{u as __pageData,g as default};
