import{_ as a,c as o,a5 as r,o as t}from"./chunks/framework.O9ad3XaM.js";const s="/assets/%E9%82%A3%E4%BA%9B%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%9C%89%E5%90%8E%E9%97%A8%E5%90%97.BG7J7wDc.png",b=JSON.parse('{"title":"核心选择","description":"","frontmatter":{"title":"核心选择","slug":"/server-core-choose","sidebar_position":2},"headers":[],"relativePath":"Java/start/server-core-choose/server-core-choose.md","filePath":"nitwikit/docs-java/start/server-core-choose/server-core-choose.md","lastUpdated":1732887236000}'),l={name:"Java/start/server-core-choose/server-core-choose.md"};function i(c,e,p,d,h,n){return t(),o("div",null,e[0]||(e[0]=[r('<h1 id="核心选择" tabindex="-1">核心选择 <a class="header-anchor" href="#核心选择" aria-label="Permalink to &quot;核心选择&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>大部分付费所谓的高性能核心大概率是假的，如果你真的需要购买，你可以向大佬咨询</p></div><blockquote><p>此处仅为部分开服核心</p></blockquote><p>目前有三类主流的选择：</p><h2 id="插件端" tabindex="-1">插件端 <a class="header-anchor" href="#插件端" aria-label="Permalink to &quot;插件端&quot;">​</a></h2><p>点此跳转到 <a href="./plugin">插件端</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>只能安装插件的服务端</p></div><p>性能较好，是初学者最适合开的服务器，拓展性较强，配置性强，但坏处就是有的插件需自行配置后使用，客户端无需安装 Mod 。</p><p>个人推荐插件服使用 Purpur ，是截止到 2024 年的稳定性和优化最好的选择</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>此类核心的存档结构有些不同</p><p>如果你是从非 Bukkit 系核心或单人存档迁移，请查看<a href="https://docs.leavesmc.org/zh_Hans/leaves/guides/migration" target="_blank" rel="noreferrer">Leaves 的迁移文档</a>(通用所有Bukkit插件端)</p></div><h2 id="混合端" tabindex="-1">混合端 <a class="header-anchor" href="#混合端" aria-label="Permalink to &quot;混合端&quot;">​</a></h2><p>点此跳转到 <a href="./hybrid">混合端</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>可以安装插件和 Mod 的服务端</p></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>部分性能不如 Mod 端，游戏性丰富，稳定性和报错非常玄学，建议新手不要尝试</p></div><p>混合端常见的有 Catserver；高版本推荐使用 Mohist 或 Arclight，就目前来看，它们的本身稳定性良好，也比纯 Forge 有所优化(但 Mod /插件数量多了之后兼容性问题可能会莫名让人头疼)</p><h2 id="mod-端" tabindex="-1">Mod 端 <a class="header-anchor" href="#mod-端" aria-label="Permalink to &quot;Mod 端&quot;">​</a></h2><p>点此跳转到 <a href="./mod">Mod 端</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>只能安装 Mod 的服务端</p></div><p>性能较差，某些 Mod 就不是想给多人游戏设计的；拓展性强，内存需求较大，游戏性可以做的很丰富，但客户端需要安装相同的 Mod 。纯 Mod 服主流只有 Forge 和 Fabric 两种，</p><p>高版本一般推荐使用 Fabric ，因为 Fabric 优化 Mod 多效果比较好，但是最重要的还是：如果有什么 Mod 只有 Fabric / Forge 版本而你又非玩不可，只能选择相应的核心。</p><h2 id="更换核心" tabindex="-1">更换核心 <a class="header-anchor" href="#更换核心" aria-label="Permalink to &quot;更换核心&quot;">​</a></h2><ul><li><a href="./plugin">插件端</a></li></ul><p>这类操作几乎无感</p><blockquote><p>核心只要是同版本的分支基本可以考虑后期再替换</p><p>如使用 Spigot 替换 Paper 或 Purpur 等</p></blockquote><ul><li><a href="./hybrid">混合端</a></li></ul><p>这有待商榷，因为各个端兼容性差异较大</p><ul><li><a href="./mod">Mod 端</a></li></ul><p>这几乎不可能，你基本没有可选择的核心</p><p>Mod 服最开始就必须选好核心，也就是 Forge 还是 Fabric 的问题。</p><h2 id="笨蛋脚本" tabindex="-1">笨蛋脚本 <a class="header-anchor" href="#笨蛋脚本" aria-label="Permalink to &quot;笨蛋脚本&quot;">​</a></h2><p>帮你选择服务端，并自动下载!</p><p><a href="https://dl.yizhan.wiki/windows-latest/select-server.exe" target="_blank" rel="noreferrer">下载</a></p><p><img src="'+s+'" alt=""></p>',33)]))}const m=a(l,[["render",i]]);export{b as __pageData,m as default};
