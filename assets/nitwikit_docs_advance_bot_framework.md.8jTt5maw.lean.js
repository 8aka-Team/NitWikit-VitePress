import{_ as e,c as a,a5 as r,o}from"./chunks/framework.O9ad3XaM.js";const b=JSON.parse('{"title":"机器人框架","description":"","frontmatter":{"title":"机器人框架","sidebar_position":1},"headers":[],"relativePath":"nitwikit/docs/advance/bot/framework.md","filePath":"nitwikit/docs/advance/bot/framework.md","lastUpdated":1727754229000}'),n={name:"nitwikit/docs/advance/bot/framework.md"};function l(i,t,s,h,p,c){return o(),a("div",null,t[0]||(t[0]=[r('<h1 id="机器人框架" tabindex="-1">机器人框架 <a class="header-anchor" href="#机器人框架" aria-label="Permalink to &quot;机器人框架&quot;">​</a></h1><h2 id="qq机器人" tabindex="-1">QQ机器人 <a class="header-anchor" href="#qq机器人" aria-label="Permalink to &quot;QQ机器人&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>请一定要使用小号来搭建 QQ 机器人，否则如果登录不成功或是成功后被检测，将有大概率导致封号。</p><p>使用如 go-cqhttp 的 <a href="https://mirai.mamoe.net/topic/2373/%E5%85%B3%E4%BA%8E%E7%AD%BE%E5%90%8D%E6%9C%8D%E5%8A%A1" target="_blank" rel="noreferrer">签名服务</a> 不稳定并且非常容易导致封号。 推荐使用 LLOneBot 这类通过 hook 官方客户端而跳过使用签名服务登录的方案。</p></div><p>控制 QQ 号的部分叫就是框架，可分为三种原理：</p><ol><li><strong>接入 QQ 官方的机器人框架</strong>，这需要每个使用这样框架的用户都必须在QQ官方申请机器人并进行审核，而且功能存在限制</li><li><strong>破解 QQ 客户端</strong> 来实现操作 QQ 号，这种方式目前最为稳定，也是最推荐的，唯一的缺点就是占用的系统资源较多</li><li>直接编写软件伪装成 QQ 客户端直接连接 QQ 官方服务器，又叫 <strong>协议库</strong>。这样的软件占用资源很低，但是目前由于被腾讯官方针对处理，导致非常不稳定。</li></ol><h3 id="liteloaderqqnt-llonebot" tabindex="-1">LiteLoaderQQNT + LLOneBot <a class="header-anchor" href="#liteloaderqqnt-llonebot" aria-label="Permalink to &quot;LiteLoaderQQNT + LLOneBot&quot;">​</a></h3><table tabindex="0"><thead><tr><th>原理</th><th style="text-align:left;">破解 QQ 客户端</th></tr></thead></table><p>LiteLoaderQQNT 是 <a href="https://github.com/Mrs4s/go-cqhttp/issues/2471" target="_blank" rel="noreferrer">利用 NTQQ 特性</a> 实现的 QQ <strong>插件加载器</strong>。 它本身并不具备QQ机器人功能，你需要<strong>为其安装 LLOneBot 插件</strong>才能开始使用 QQ 机器人功能。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>根据先前其他该领域开发者的经历，该软件开发者不建议任何人公开宣传此软件。如果你使用了 LLOneBot，请勿在任何群聊发送可以看出你使用了非官方 QQ 的截图。</p></div><p>前往 <a href="https://liteloaderqqnt.github.io/" target="_blank" rel="noreferrer">LiteLoaderQQNT官网</a> ，根据其教程下载安装该框架。</p><p>安装完成后，根据 <a href="https://liteloaderqqnt.github.io/guide/plugins.html" target="_blank" rel="noreferrer">LiteLoaderQQNT 文档安装插件方法</a> 为框架安装插件：<a href="https://github.com/LLOneBot/LLOneBot/tree/main" target="_blank" rel="noreferrer">LLOneBot</a>。 如果你已经在使用该框架并且已安装了 <a href="https://github.com/ltxhhz/LL-plugin-list-viewer/tree/main" target="_blank" rel="noreferrer">插件列表查看</a> 插件，也可以直接使用该插件进行安装。</p><p>安装完成后，进入 QQ 设置，在侧边栏中找到 LLOneBot 点击切换到其设置页，然后 <strong>根据机器人给出的文档</strong> 进行配置。</p><h3 id="lagrange-拉格朗日" tabindex="-1">Lagrange(拉格朗日) <a class="header-anchor" href="#lagrange-拉格朗日" aria-label="Permalink to &quot;Lagrange(拉格朗日)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>原理</th><th style="text-align:left;">协议库</th></tr></thead></table><p><a href="https://docs.qq.com/doc/DQ2N2b0JqeUhmWUVa" target="_blank" rel="noreferrer">参见此处</a></p><h3 id="gensokyo" tabindex="-1"><a href="https://github.com/Hoshinonyaruko/Gensokyo" target="_blank" rel="noreferrer">Gensokyo</a> <a class="header-anchor" href="#gensokyo" aria-label="Permalink to &quot;[Gensokyo](https://github.com/Hoshinonyaruko/Gensokyo)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>原理</th><th style="text-align:left;">官方 API</th></tr></thead></table><p>此框架由于是接入 QQ 官方频道机器人 API，使用稳定且有腾讯官方的支持。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>由于官方限制，频道机器人无法主动发送消息，在被 <strong>不是机器人的普通用户</strong> @后可自由发送消息，持续 5 分钟。当超过 5 分钟时，机器人会提示&quot;回复时间结束&quot;。</p></div><h3 id="openshamrock" tabindex="-1"><a href="https://github.com/whitechi73/OpenShamrock" target="_blank" rel="noreferrer">OpenShamrock</a> <a class="header-anchor" href="#openshamrock" aria-label="Permalink to &quot;[OpenShamrock](https://github.com/whitechi73/OpenShamrock)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>原理</th><th style="text-align:left;">破解 QQ 客户端</th></tr></thead></table><p>OpenShamrock 是运行在安卓手机 QQ 上的 OneBot 框架，相当于安卓版的 LiteLoaderQQNT + LLOneBot。</p><p>也就是说，你必须已经拥有一台 <strong>和服务器连接到同一局域网下</strong> 的安卓手机。有两种方式来部署一台这样的安卓手机：</p><ol><li>使用闲置的旧手机</li><li>服务器内存足够的情况下部署安卓模拟器</li></ol><p>OpenShamrock的搭建教程待补充</p><h3 id="mirai" tabindex="-1"><a href="https://mirai.mamoe.net/" target="_blank" rel="noreferrer">Mirai</a> <a class="header-anchor" href="#mirai" aria-label="Permalink to &quot;[Mirai](https://mirai.mamoe.net/)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>原理</th><th style="text-align:left;">协议库</th></tr></thead></table><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Mirai 原生由于本身为协议库原理，近期因不可抗力导致难以登录并且99%封号冻结。推荐配合下文的 Overflow 使用。</p></div><p>如果发现 Mirai 的 <strong>帐号登录</strong> 对于你的服务器来说难以使用和维护，可以使用 <a href="https://github.com/MrXiaoM/Overflow" target="_blank" rel="noreferrer">Overflow(OneBot)</a> 将 Mirai 接入其他 OneBot 框架，而不是直接通过 Mirai 登录。</p><p><strong><a href="https://github.com/MrXiaoM/Overflow/blob/main/docs/UserManual.md" target="_blank" rel="noreferrer">Overflow 使用方法</a></strong></p><p>配置 Websocket 链接时，在正向 ws 和反向 ws 之间选择一种即可。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>推荐使用 <a href="https://mirai.mrxiaom.top/#get-started" target="_blank" rel="noreferrer">官网一键打包整合包</a> + <a href="#liteloaderqqnt--llonebot">LLOneBot</a> 的方式部署。</p></div>',32)]))}const g=e(n,[["render",l]]);export{b as __pageData,g as default};
