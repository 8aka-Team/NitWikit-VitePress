import{_ as o,c as d,a5 as t,G as s,w as n,B as r,o as h,j as a,a as i}from"./chunks/framework.Dzz2jpra.js";const f=JSON.parse('{"title":"JVM 优化","description":"","frontmatter":{"sidebar_position":1,"title":"JVM 优化","slug":"/optimize/jvm"},"headers":[],"relativePath":"nitwikit/docs-java/process/maintenance/optimize/jvm/jvm.md","filePath":"nitwikit/docs-java/process/maintenance/optimize/jvm/jvm.md","lastUpdated":1730198022000}'),E={name:"nitwikit/docs-java/process/maintenance/optimize/jvm/jvm.md"};function k(g,l,u,c,m,v){const e=r("TabItem"),p=r("Tabs");return h(),d("div",null,[l[5]||(l[5]=t(`<h1 id="jvm-优化" tabindex="-1">JVM 优化 <a class="header-anchor" href="#jvm-优化" aria-label="Permalink to &quot;JVM 优化&quot;">​</a></h1><p>这篇文章可以说是整个笨蛋文档中编写历时最久的()，为了确保正确性，我们在Windows和Linux 上进行了大量性能测试，结果可以说是十分出人意料</p><p>这场测试的细节和日志，报告，Spark，GCLog等可以在<a href="https://github.com/lilingfengdev/Test-Java" target="_blank" rel="noreferrer">Test - Java</a>找到</p><h2 id="java-选择" tabindex="-1">Java 选择 <a class="header-anchor" href="#java-选择" aria-label="Permalink to &quot;Java 选择&quot;">​</a></h2><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowchart TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[选择] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; Java8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; Java11</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; Java21</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Java8 --&gt; Dragonwell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Java11 --&gt; Dragonwell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Java21 --&gt; Windows</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Windows --&gt; 内存充足</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    内存充足 --&gt; C[GraalVM Enterprise Edition]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Windows --&gt; 内存不足</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    内存不足 --&gt; OpenJ9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Java21 --&gt; Linux</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Linux --&gt; 内存不足</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Linux --&gt; D[内存充足]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; 好的兼容性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    好的兼容性 --&gt;|需要| C</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    好的兼容性 --&gt;|不需要| E[Azul Zing]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Zulu的性能</p><p>根据官方对 Zulu 的定位，Zulu 的重点是<strong>安全性和稳定性</strong>，而非性能</p><p>大部分人对<code>Zulu 性能好</code>这一错误看法主要是来源于同一公司 Azul 旗下的另一款产品 Zing</p><p>该产品(Zing)的主要侧重点是性能，但是，如果你不想折腾，想拥有一个超高稳定性的环境，Zulu 仍然是你的最佳选择</p></div><div class="tip custom-block"><p class="custom-block-title">兼容性</p><p>根据我们的测试，GraalVM，Dragonwell，Zulu 目前都没有被报告过不兼容</p><p>Zing 与 LuckPerms 以及一些特殊插件会有一点不兼容</p><p>OpenJ9 虽然内存占用很低，但是性能很差，并且与很多插件有不兼容(比如 Spark)</p><p>GraalVM 在 22.3.0 修复了所有已知的 Minecraft 错误</p></div><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3>`,8)),s(p,{queryString:"jvm-download"},{default:n(()=>[s(e,{value:"dragonwell",label:"Dragonwell"},{default:n(()=>l[0]||(l[0]=[a("p",null,"Dragonwell 分为 Standard Edition 和 Extended Edition，推荐下载 Extended Edition",-1),a("ul",null,[a("li",null,[a("a",{href:"https://dragonwell-jdk.io/",target:"_blank",rel:"noreferrer"},"官网"),i(" 下载区域选择"),a("code",null,"China Mainland")]),a("li",null,[a("a",{href:"https://github.com/dragonwell-project/dragonwell8/releases",target:"_blank",rel:"noreferrer"},"Dragonwell 8 预览")]),a("li",null,[a("a",{href:"https://github.com/dragonwell-project/dragonwell11/releases",target:"_blank",rel:"noreferrer"},"Dragonwell 11 预览")])],-1)])),_:1}),s(e,{value:"graalvm",label:"GraalVM"},{default:n(()=>l[1]||(l[1]=[a("p",null,"GraalVM 分为 Community Edition(CE) 和 Enterprise Edition(EE)，除非你服务器大到会被 Oracle 找上门，不然请选择 Enterprise Edition",-1),a("ul",null,[a("li",null,[a("a",{href:"https://www.graalvm.org/downloads/",target:"_blank",rel:"noreferrer"},"下载 EE")]),a("li",null,[a("a",{href:"https://github.com/graalvm/graalvm-ce-builds/releases/",target:"_blank",rel:"noreferrer"},"下载 CE")]),a("li",null,[a("a",{href:"https://d.injdk.cn/download/graalvm",target:"_blank",rel:"noreferrer"},"下载镜像")])],-1),a("div",{class:"tip custom-block"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,"Oracle 官网同样提供 GraalVM，但是上面的 GraalVM EE 包含了企业版套件，这些MC根本用不到，只需要企业版编译器就可以了")],-1)])),_:1}),s(e,{value:"zing",label:"Azul Zing"},{default:n(()=>l[2]||(l[2]=[a("p",null,"Azul Zing 不能直接被下载，需要填写试用申请表，但我们通过神秘手段搞到了安装包",-1),a("ul",null,[a("li",null,[a("a",{href:"https://cdn.azul.com/zing-zvm/ZVM24.07.0.0/zing24.07.0.0-3-jdk21.0.3.0.101-linux.x86_64.rpm",target:"_blank",rel:"noreferrer"},"RPM")]),a("li",null,[a("a",{href:"https://cdn.azul.com/zing-zvm/ZVM24.07.0.0/zing24.07.0.0-3-jdk21.0.3.0.101-linux_x64.tar.gz",target:"_blank",rel:"noreferrer"},"TAR.GZ")]),a("li",null,[a("a",{href:"https://cdn.azul.com/zing-zvm/ZVM24.07.0.0/zing24.07.0.0-3-jdk21.0.3.0.101-linux_amd64.deb",target:"_blank",rel:"noreferrer"},"DEB")]),a("li",null,[a("a",{href:"https://www.azul.com/downloads/#prime",target:"_blank",rel:"noreferrer"},"官网")])],-1)])),_:1}),s(e,{value:"zulu",label:"Azul Zulu"},{default:n(()=>l[3]||(l[3]=[a("p",null,"Azul Zulu 支持 Java 8 以上，Java 7 和 6 需要成为客户才能下载",-1),a("ul",null,[a("li",null,[a("a",{href:"https://www.azul.com/downloads/?package=jdk&show-old-builds=true#zulu",target:"_blank",rel:"noreferrer"},"官网")]),a("li",null,[a("a",{href:"https://d.injdk.cn/download/zulu",target:"_blank",rel:"noreferrer"},"下载镜像")])],-1)])),_:1}),s(e,{value:"openj9",label:"OpenJ9"},{default:n(()=>l[4]||(l[4]=[a("p",null,[i("OpenJ9 有认证版和非认证版，主要是因为和 OpenJ9 的关系和操作系统的关系而使用不同的许可证罢了，本质代码是一样的，直接下"),a("code",null,"IBM Semeru Runtime Open Edition"),i("就行")],-1),a("ul",null,[a("li",null,[a("a",{href:"https://developer.ibm.com/languages/java/semeru-runtimes/downloads/",target:"_blank",rel:"noreferrer"},"官网")]),a("li",null,[a("a",{href:"https://d.injdk.cn/download/ibm",target:"_blank",rel:"noreferrer"},"下载镜像")])],-1)])),_:1})]),_:1}),l[6]||(l[6]=t(`<h2 id="垃圾回收器" tabindex="-1">垃圾回收器 <a class="header-anchor" href="#垃圾回收器" aria-label="Permalink to &quot;垃圾回收器&quot;">​</a></h2><p>经过我们的多次测试，G1GC和ZGC 最适合MC服务器(还有一个 Zing C4)</p><p>选择！</p><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowchart TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[选择] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; B[机器配置足够，起步4h8g，推荐8h8g]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; 机器配置不达标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C[Java 21+，或Dragonwell 11]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; 其他</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; ZGC</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    其他 --&gt; G1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    机器配置不达标 --&gt; G1</span></span></code></pre></div><p>ZGC 的无停顿可以给玩家带来更好的体验，并且更充分的利用多核。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>虽然ZGC在高版本上 Java 表现良好，但是某些 Java 上会造成反效果（如 GraalVM），参见各个 Java 的具体配置介绍。</p></div><p>对于 GC 细节性的优化请阅读每个Java的优化指南</p>`,7))])}const w=o(E,[["render",k]]);export{f as __pageData,w as default};
