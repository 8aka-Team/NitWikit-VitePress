import{_ as e,c as r,a5 as i,o as l}from"./chunks/framework.O9ad3XaM.js";const p=JSON.parse('{"title":"Luminol","description":"","frontmatter":{"title":"Luminol","sidebar_position":1},"headers":[],"relativePath":"Java/start/server-core-choose/folia/luminol.md","filePath":"nitwikit/docs-java/start/server-core-choose/folia/luminol.md","lastUpdated":1738609000000}'),o={name:"Java/start/server-core-choose/folia/luminol.md"};function t(n,a,h,s,c,m){return l(),r("div",null,a[0]||(a[0]=[i('<h1 id="luminol" tabindex="-1">Luminol <a class="header-anchor" href="#luminol" aria-label="Permalink to &quot;Luminol&quot;">​</a></h1><p>Luminol 是一个非常棒的 Folia 分支！</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>我们不推荐直接使用 Folia，因为这需要自己去构建，<a href="https://luminolmc.com" target="_blank" rel="noreferrer">Luminol</a> 是一个非常棒的选择，如果你需要1.20.1/2，你可以使用 <a href="https://github.com/Era4FunMC/Molia" target="_blank" rel="noreferrer">Molia</a></p><p>请选择 Luminol，我们后面会讲 LightLuminol，下载到本地后，替换原来的核心就可以了</p><h2 id="lightluminol" tabindex="-1">LightLuminol <a class="header-anchor" href="#lightluminol" aria-label="Permalink to &quot;LightLuminol&quot;">​</a></h2><p>LightingLuminol 是 Luminol 的分支，旨在修复对 BukkitAPI 的破坏，最大程度保证 Bukkit 插件的兼容性。但是，虽然 LightLuminol 对于 Bukkit 插件兼容性较好，但是会有许多问题，包括不定时的NullPointerError，Thread 不安全，内存泄露，数据丢失（一天崩个几十次，挺正常的）</p><p>所以在开始使用 LightingLuminol，请想想 Leaf 是不是更好？</p><p>如果你需要 1.20.1/2，你可以使用 <a href="https://github.com/Era4FunMC/DirtyMolia" target="_blank" rel="noreferrer">DirtyMolia</a></p><p>（Molia 和 Luminol 其实是同一个作者~~）</p><h2 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h2><p>如果官网进不去或者下载慢可以使用这里的镜像!</p><ul><li><a href="https://sync.mcsl.com.cn/core/Luminol" target="_blank" rel="noreferrer">Luminol</a></li><li><a href="https://sync.mcsl.com.cn/core/LightingLuminol" target="_blank" rel="noreferrer">LightingLuminol</a></li><li><a href="https://vip.123pan.cn/1821558579/Lingyi/core/molia-1.20.2-mcres.cn.jar" target="_blank" rel="noreferrer">Molia 1.20.2</a></li><li><a href="https://vip.123pan.cn/1821558579/Lingyi/aaa/molia/molia-1.20.1-mcres.cn.jar" target="_blank" rel="noreferrer">Molia 1.20.1</a></li><li><a href="https://vip.123pan.cn/1821558579/Lingyi/aaa/molia/Molia-1.19.4-mcres.cn.jar" target="_blank" rel="noreferrer">Molia 1.19.4</a></li><li><a href="https://vip.123pan.cn/1821558579/Lingyi/core/dirtymolia-1.20.2-mcres.cn.jar" target="_blank" rel="noreferrer">DirtyMolia 1.20.2</a></li><li><a href="https://vip.123pan.cn/1821558579/8448710" target="_blank" rel="noreferrer">DirtyMolia 1.20.1</a></li></ul><h2 id="调配置" tabindex="-1">调配置 <a class="header-anchor" href="#调配置" aria-label="Permalink to &quot;调配置&quot;">​</a></h2><p>安装完 Luminol 后你还需要一点小小的配置让你的 Luminol 更好</p><h3 id="分配线程数" tabindex="-1">分配线程数 <a class="header-anchor" href="#分配线程数" aria-label="Permalink to &quot;分配线程数&quot;">​</a></h3><p>众所周知 Folia 默认的分配线程数非常脑瘫，会出现一核有难，八核围观的场景</p><p>打开 Paper 的全局配置，找到 <code>threaded-regions.threads</code>，通常情况下，分配给区块 Tick 线程数应该是 80% 乘上你物理 CPU 核数</p><h3 id="生电配置" tabindex="-1">生电配置 <a class="header-anchor" href="#生电配置" aria-label="Permalink to &quot;生电配置&quot;">​</a></h3><p>Luminol 另一个好处就是可以开启生电配置</p><p>打开 Luminol 的配置文件</p><ul><li>fixes.allow_void_trading 虚空交易</li><li>fixes.allow_unsafe_teleportation 刷沙</li><li>fixes.use_vanilla_random_source RNG操作</li></ul><p>其它特性请阅读 Paper 文档</p>',23)]))}const d=e(o,[["render",t]]);export{p as __pageData,d as default};
