import{_ as e,c as t,a5 as r,o as s}from"./chunks/framework.O9ad3XaM.js";const k=JSON.parse('{"title":"RNG","description":"","frontmatter":{"title":"RNG","sidebar_position":3},"headers":[],"relativePath":"Java/process/maintenance/anticheat/rng.md","filePath":"nitwikit/docs-java/process/maintenance/anticheat/rng.md","lastUpdated":1732240545000}'),i={name:"Java/process/maintenance/anticheat/rng.md"};function n(l,a,p,h,o,c){return s(),t("div",null,a[0]||(a[0]=[r(`<h1 id="rng-漏洞" tabindex="-1">RNG 漏洞 <a class="header-anchor" href="#rng-漏洞" aria-label="Permalink to &quot;RNG 漏洞&quot;">​</a></h1><p>RNG 是 <strong>随机数生成器</strong> 的简写。</p><p>本质上只是个计算器，用来计算 Minecraft 中的随机事件。</p><ul><li><strong>原理？</strong></li></ul><p>计算机产生随机数不是真正的随机，而是根据已有的数据，通过复杂的公式产生一个 “伪随机数” 。</p><p>那么，如果你知道这个公式，并且知道要使用什么数据，操纵进入公式的数据，就可以使随机数变成自己想要的结果。</p><p>利用此漏洞的客户端 mod：</p><ul><li><a href="https://www.mcmod.cn/class/4239.html" target="_blank" rel="noreferrer">clientcommands</a></li><li><a href="https://github.com/Earthcomputer/EnchantmentCracker" target="_blank" rel="noreferrer">EnchantmentCracker</a></li></ul><h2 id="能干啥" tabindex="-1">能干啥？ <a class="header-anchor" href="#能干啥" aria-label="Permalink to &quot;能干啥？&quot;">​</a></h2><h3 id="指定附魔" tabindex="-1">指定附魔 <a class="header-anchor" href="#指定附魔" aria-label="Permalink to &quot;指定附魔&quot;">​</a></h3><p>玩家可以百分百附出满级附魔。</p><h3 id="耐久无损耗" tabindex="-1">耐久无损耗 <a class="header-anchor" href="#耐久无损耗" aria-label="Permalink to &quot;耐久无损耗&quot;">​</a></h3><p>耐久附魔不是增加物品的耐久，而是有概率不消耗耐久。</p><h3 id="钓鱼出指定宝藏" tabindex="-1">钓鱼出指定宝藏 <a class="header-anchor" href="#钓鱼出指定宝藏" aria-label="Permalink to &quot;钓鱼出指定宝藏&quot;">​</a></h3><p>同理，玩家可以想钓出什么，就能钓出什么。</p><h2 id="如何防御-rng-漏洞" tabindex="-1">如何防御 RNG 漏洞 <a class="header-anchor" href="#如何防御-rng-漏洞" aria-label="Permalink to &quot;如何防御 RNG 漏洞&quot;">​</a></h2><p><a href="https://papermc.io" target="_blank" rel="noreferrer">Paper</a> 核心(包括它们的分支)，可以防止玩家破解 RNG 。</p><p>其中， <a href="https://purpurmc.org/" target="_blank" rel="noreferrer">Purpur</a> 和 <a href="https://leavesmc.org/" target="_blank" rel="noreferrer">Leaves</a> (包括它们的分支)可以自行选择使用的 RNG 算法。</p><p>对于 <a href="https://purpurmc.org/" target="_blank" rel="noreferrer">Purpur</a> 和 <a href="https://leavesmc.org/" target="_blank" rel="noreferrer">Leaves</a> 用户，你可以根据自己的核心类型按照下文修改配置 (默认就是开启的)：</p><p>这是 Purpur 的配置方法：</p><p><code>purpur.yml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      entity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        shared-random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>这是 Leaves 的配置方法；</p><p><code>leaves.yml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">use-vanilla-random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果你使用 Paper 核心但想用回原版的 RNG 算法，请参考 <a href="https://github.com/PaperMC/Paper/issues/7166#issuecomment-998988542" target="_blank" rel="noreferrer">Paper#7166</a> 中提到的解决方法。</p><p>如果你使用 Gale、Leaf 等核心，你甚至无需为此担心，因为他们的 RNG 算法已经经过改良，不再是原版的 RNG 。</p></div>`,26)]))}const u=e(i,[["render",n]]);export{k as __pageData,u as default};
