import{_ as s,c as e,a5 as i,o as l}from"./chunks/framework.O9ad3XaM.js";const c=JSON.parse('{"title":"如何修复Geyser头颅不显示","description":"","frontmatter":{"title":"如何修复Geyser头颅不显示","sidebar_position":3},"headers":[],"relativePath":"nitwikit/docs-java/process/mobile-player/Geyser/Upgrade/Geyser-skull.md","filePath":"nitwikit/docs-java/process/mobile-player/Geyser/Upgrade/Geyser-skull.md","lastUpdated":1727754229000}'),n={name:"nitwikit/docs-java/process/mobile-player/Geyser/Upgrade/Geyser-skull.md"};function t(p,a,r,h,d,o){return l(),e("div",null,a[0]||(a[0]=[i(`<h1 id="如何修复geyser头颅不显示" tabindex="-1">如何修复Geyser头颅不显示 <a class="header-anchor" href="#如何修复geyser头颅不显示" aria-label="Permalink to &quot;如何修复Geyser头颅不显示&quot;">​</a></h1><p>:::note</p><p>目前仍然没有自动修复的办法</p><p>:::</p><p>导致这个问题的主要原因是基岩版不支持自定义的头颅，所以只能通过Geyser创建映射并分发给客户端</p><h2 id="如何修复" tabindex="-1">如何修复 <a class="header-anchor" href="#如何修复" aria-label="Permalink to &quot;如何修复&quot;">​</a></h2><p>要在间歇泉中设置自定义头，你必须选择如何注册你的方块。最简单的方法是使用 custom-skulls.yml</p><h3 id="custom-skulls-yml" tabindex="-1">custom-skulls.yml <a class="header-anchor" href="#custom-skulls-yml" aria-label="Permalink to &quot;custom-skulls.yml&quot;">​</a></h3><p>配置文件位于 Geyser 的配置文件夹中，结构如下</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#--------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Geyser 自定义头骨配置文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 禁用 \`add-custom-skull-blocks\` 时会忽略此文件。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 有关主要配置值集，请参阅“config.yml”</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义头骨，其中包含玩家用户名、UUID 或此文件中指定的纹理</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将被翻译为自定义块并显示在背包和实体上。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#--------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Java 玩家用户名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Geyser启动时皮肤将会更新，玩家必须重新下载</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果有玩家更改了皮肤，则资源包不会自动更新。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">player-usernames：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">间歇泉MC</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Java 玩家 UUID</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Geyser启动时皮肤将会更新，玩家必须重新下载</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果有玩家改变了皮肤，则资源包并不会自动更新。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">player-uuids：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8b8d8e8f-2759-47c6-acb5-5827de8a72b8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义玩家头像NBT中找到的一长串字符</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">player-profiles：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ewogICJ0aW1lc3RhbXAiIDogMTY1NzMyMjIzOTgzMywKICAicHJvZmlsZUlkIiA6ICJjZGRiZTUyMGQwNDM0YThiYTFjYzlmYzkyZmRlMmJjZiIsCiAgInByb2ZpbGVOYW1liIa6ICJBbWJlcmljaHUi LAOGICJ0ZXh0dXJlcyIgOiB7CiAgICAiU0tJTiIgICAiU0tJTiIgOiB7CiAgICAgICJ1cmwiIDogImh0dHA6Ly90ZXh0dXJlcy5taW5ly3JhZnQubmV0L3RleHR1cmUvYTkwNzkwYzU3ZTE4MWVkMTNhZGVkMTRjNDdl ZTJmN2M4ZGUzNTMzZTAxN2JhOTU3YWY3YmRmOWRmMWJkZTk0ZiISCiAgICAgICJtZXRhZGF0YSIGOiB7CIAAGICAGICAgIm1vZGVsIiaA6ICJzbGltIgogICAgICB9CiAgICB9CiAgfQp9</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Minecraft 皮肤服务器上皮肤的哈希值</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">skin-hashes：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">a90790c57e181ed13aded14c47ee2f7c8de3533e017ba957af7bdf9df1bde94f</span></span></code></pre></div><p>你只需要提取出你所需要显示的头颅，根据类别添加到配置文件中，然后<strong>重启服务端</strong>，就可以显示</p><h3 id="玩家用户名" tabindex="-1">玩家用户名 <a class="header-anchor" href="#玩家用户名" aria-label="Permalink to &quot;玩家用户名&quot;">​</a></h3><p>头颅可以通过玩家用户名在此部分注册。这些将在 Geyser 开始时更新。因此，如果玩家的用户名或皮肤发生变化，它们可能会发生变化</p><h3 id="玩家uuid" tabindex="-1">玩家uuid <a class="header-anchor" href="#玩家uuid" aria-label="Permalink to &quot;玩家uuid&quot;">​</a></h3><p>头颅可以通过玩家 UUID 在此部分注册。这些将在 Geyser 开始时更新。因此，如果皮肤发生变化，它们可能会发生变化。</p><h3 id="玩家资料" tabindex="-1">玩家资料 <a class="header-anchor" href="#玩家资料" aria-label="Permalink to &quot;玩家资料&quot;">​</a></h3><p>头可以通过自定义玩家头部的 NBT 中的纹理字符串在此部分注册。除非手动更改该值，否则这些值不会在间歇泉启动时更新。因此，如果玩家的用户名或皮肤发生变化，它们不会改变。数据只是 base64 编码的 JSON。</p><p>如果在Paper服务器上，则可以通过将项目握在手中并运行命令来获取头骨的此数据。这会将项目的 NBT 数据输出到聊天和控制台。 纹理字符串位于<code>SkullOwner</code>标签下、<code>Properties</code>标签下、<code>textures</code>标签下。例如：/paper dumpitem</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[05:58:07 INFO]: .KastleFirefox issued server command: /paper dumpitem</span></span>
<span class="line"><span>[05:58:07 INFO]: minecraft:player_head{display: {Name: &#39;{&quot;text&quot;:&quot;Test&quot;}&#39;}， SkullOwner: {Properties: {textures: [{Value: &quot;ewogICJ0aW1lc3RhbXAiIDogMTY1NzMyMjIzOTgzMywKICAicHJvZmlsZUlkIiA6ICJjZGRiZTUyMGQwNDM0YThiYTFjYzlmYzkyZmRlMmJjZiIsCiAgInByb2ZpbGVOYW1lIiA6ICJkYXZjaG9vIiwKICAidGV4dHVyZXMiIDogewogICAgIlNLSU4iIDogewogICAgICAidXJsIiA6ICJodHRwOi8vdGV4dHVyZXMubWluZWNyYWZ0Lm5ldC90ZXh0dXJlL2E5MDc5MGM1N2UxODFlZDEzYWRlZDE0YzQ3ZWUyZjdjOGRlMzUzM2UwMTdiYTk1N2FmN2JkZjlkZjFiZGU5NGYiLAogICAgICAibWV0YWRhdGEiIDogewogICAgICAgICJtb2RlbCIgOiAic2xpbSIKICAgICAgfQogICAgfQogIH0KfQ&quot;}]}， Id: [I; -229048314, -553040501, -1407961158, 465313087]}}</span></span></code></pre></div><h3 id="皮肤哈希" tabindex="-1">皮肤哈希 <a class="header-anchor" href="#皮肤哈希" aria-label="Permalink to &quot;皮肤哈希&quot;">​</a></h3><p>骷髅头可以通过Minecraft皮肤服务器上的皮肤哈希值在此部分注册。这位于 URL 的末尾。</p><h2 id="快速提取" tabindex="-1">快速提取 <a class="header-anchor" href="#快速提取" aria-label="Permalink to &quot;快速提取&quot;">​</a></h2><p>那么你可能会问，像Slimefun那么多，有什么快点的方法吗？</p><p>当然是有的</p><h3 id="playerheadgetter" tabindex="-1">PlayerHeadGetter <a class="header-anchor" href="#playerheadgetter" aria-label="Permalink to &quot;PlayerHeadGetter&quot;">​</a></h3><p><a href="https://github.com/zimzaza4/PlayerHeadGetter" target="_blank" rel="noreferrer">项目地址</a></p><p><a href="https://github.com/lilingfengdev/PlayerHeadGetterBuild/releases/tag/latest" target="_blank" rel="noreferrer">下载地址</a></p><h3 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h3><p><code>/headgetter hand</code> 获取手上头颅base64</p><p><code>/headgetter slimefun</code> 获取Slimefun 已注册头颅base64</p><p><code>/headgetter inventory</code> 切换至inventory获取模式(开启后会记录你打开的所有ui中的头颅物品的base64)</p><p><code>/headgetter save</code> 导出头颅base64</p><h3 id="使用流程" tabindex="-1">使用流程 <a class="header-anchor" href="#使用流程" aria-label="Permalink to &quot;使用流程&quot;">​</a></h3><ul><li>先用前三个命令获取头颅</li><li>完事之后使用导出命令</li></ul>`,34)]))}const g=s(n,[["render",t]]);export{c as __pageData,g as default};
