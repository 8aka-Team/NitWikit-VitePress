import{_ as i,c as e,a5 as t,o as l}from"./chunks/framework.O9ad3XaM.js";const u=JSON.parse('{"title":"笨蛋脚本使用","description":"","frontmatter":{"title":"笨蛋脚本使用","sidebar_position":4},"headers":[],"relativePath":"preparation/dumb-script-using.md","filePath":"nitwikit/docs/preparation/dumb-script-using.md","lastUpdated":1738038571000}'),s={name:"preparation/dumb-script-using.md"};function r(n,a,p,h,o,d){return l(),e("div",null,a[0]||(a[0]=[t('<h1 id="笨蛋脚本使用" tabindex="-1">笨蛋脚本使用 <a class="header-anchor" href="#笨蛋脚本使用" aria-label="Permalink to &quot;笨蛋脚本使用&quot;">​</a></h1><p>笨蛋脚本是由本 wiki 的作者之一 lilingfeng 编写的，专门为笨蛋设计的，你只需要双击启动，回答几个问题就能帮你自动完成。</p><h2 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h2><p><a href="https://github.com/lilingfengdev/NitWiki-Script" target="_blank" rel="noreferrer">笨蛋脚本 GitHub 链接</a></p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><p>目前，我们已经编写了以下的笨蛋脚本：</p><ul><li>自动优化服务端配置文件</li><li>自动配置防矿透</li><li>自动配置防种子破解</li><li>自动生成启动脚本</li><li>自动安装常用插件</li><li>自动安装 Java</li><li>一键上传日志</li><li>自动配置反作弊</li><li>自动简单配置</li><li>自动选择服务端核心并下载</li><li>自动配置 Geyser</li><li>Via 自动配置</li><li>服务端选择+下载</li><li>还有更多(在编写中)</li></ul><h2 id="赞助我们" tabindex="-1">赞助我们 <a class="header-anchor" href="#赞助我们" aria-label="Permalink to &quot;赞助我们&quot;">​</a></h2><p>打点钱吧，写这些脚本并不容易，没钱的话，给个免费的 Star 也可以 😃</p><h2 id="使用准备" tabindex="-1">使用准备 <a class="header-anchor" href="#使用准备" aria-label="Permalink to &quot;使用准备&quot;">​</a></h2><p>除生成启动脚本，其他脚本都必须启动一次服务端后才能使用，生成启动脚本需要提前安装服务器核心。</p><p>:::danger[使用方法]</p><p>所有笨蛋脚本都需要在服务器根目录执行!!</p><p>:::</p><h2 id="其他操作系统" tabindex="-1">其他操作系统 <a class="header-anchor" href="#其他操作系统" aria-label="Permalink to &quot;其他操作系统&quot;">​</a></h2><p>我们提供其他操作系统的二进制分发文件(注意:二进制分发仅可以在 64 位操作系统上运行，Windows 只支持 Win10 以上)</p><p><a href="https://github.com/lilingfengdev/NitWiki-Script/releases/tag/ubuntu-latest" target="_blank" rel="noreferrer">Linux</a></p><p><a href="https://github.com/lilingfengdev/NitWiki-Script/releases/tag/macos-latest" target="_blank" rel="noreferrer">MacOS (真的有人会用 Mac 开服吗?)</a></p><p>32 位操作系统或 Win7 需要自己安装 Python ，并安装以下依赖(一大堆)</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyyaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install-jdk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tqdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> psutil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rtoml</span></span></code></pre></div><h2 id="加速下载" tabindex="-1">加速下载 <a class="header-anchor" href="#加速下载" aria-label="Permalink to &quot;加速下载&quot;">​</a></h2><p>考虑到国内 GitHub 的牛逼访问速度,我们为笨蛋脚本提供了下载镜像</p><p>比如我拿到的 GitHub 链接是<code>https://github.com/lilingfengdev/NitWiki-Script/releases/download/ubuntu-latest/auto-antiseedcracker.bin</code></p><p>替换<code>https://github.com/lilingfengdev/NitWiki-Script/releases/download</code>为<code>https://dl.8aka.org</code>就可以体验极速下载</p><h2 id="了解" tabindex="-1">了解 <a class="header-anchor" href="#了解" aria-label="Permalink to &quot;了解&quot;">​</a></h2><p>在启动这个脚本之前，你应该 <strong>明白你正在干什么，会导致什么后果</strong>，以优化脚本举例，你应该明白，执行这个脚本之后，村民的 AI 会受到限制，变得有点傻(当然不止这个，还有其他后果，此处不详谈)。</p><p>我们拒绝回答一切在启动笨蛋脚本之前不看文档导致的问题~~(除非打钱)~~。</p><h2 id="宗旨" tabindex="-1">宗旨 <a class="header-anchor" href="#宗旨" aria-label="Permalink to &quot;宗旨&quot;">​</a></h2><p>我们只教导笨蛋，不制造笨蛋，所以不要问可不可以写一个一键脚本，完成一切工作。</p><p><s>其实已经写出来了.......</s></p><h2 id="许可" tabindex="-1">许可 <a class="header-anchor" href="#许可" aria-label="Permalink to &quot;许可&quot;">​</a></h2><p>本脚本永久免费，如果你是付费得到本脚本的，请立刻退款并骂死那个人。</p>',32)]))}const k=i(s,[["render",r]]);export{u as __pageData,k as default};
