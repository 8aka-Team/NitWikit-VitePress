import{_ as i,c as a,a5 as n,o as l}from"./chunks/framework.O9ad3XaM.js";const o=JSON.parse('{"title":"服务端结构","description":"","frontmatter":{"title":"服务端结构","sidebar_position":3},"headers":[],"relativePath":"Java/start/basic/server-file-structure.md","filePath":"nitwikit/docs-java/start/basic/server-file-structure.md","lastUpdated":1736524108000}'),e={name:"Java/start/basic/server-file-structure.md"};function p(t,s,h,k,r,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="服务端结构" tabindex="-1">服务端结构 <a class="header-anchor" href="#服务端结构" aria-label="Permalink to &quot;服务端结构&quot;">​</a></h1><p>我们先来简单看一眼 插件端 的文件夹结构(以Purpur为例)：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─assets</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 储存 Minecraft 音效贴图等重要文件，不要乱动</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─cache</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             // 缓存文件夹，一般放置 Minecraft 原版服务器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─config</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Paper fork 服务器特有的配置文件，用于放置 Paper 的配置文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─crash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reports</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 存放服务器崩溃的完整报告</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─libraries</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 存放服务器及部分插件的依赖库</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─logs</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // 存放服务端日志的文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─plugins</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // 存放插件的文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─versions</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // 存放对应版本需要的依赖 jar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─world</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             // 主世界文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─advancements</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 成就文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─data</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // 世界数据文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─datapacks</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 数据包</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  │  └─bukkit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─entities</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 实体数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─playerdata</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 玩家数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─poi</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 兴趣点数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─region</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 区块数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  └─stats</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // 统计信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─world_nether</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 地狱世界文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  └─DIM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│      ├─data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│      ├─entities</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│      ├─poi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│      └─region</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└─world_the_end</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 末地世界文件夹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    └─DIM1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ├─data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ├─entities</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ├─poi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        └─region</span></span></code></pre></div><p>对于类似 Catserver 的混合服务器，文件夹结构是类似的，基本就多了 <code>/mods</code> 文件夹，少了 Bukkit 的下游服务器特有的配置(如 <code>purpur.yml</code> 等)。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>对于世界文件夹的详细说明，请前往 <strong><a href="./what-is-world">世界文件架构</a></strong></p></div><h2 id="根目录下的一些文件" tabindex="-1">根目录下的一些文件 <a class="header-anchor" href="#根目录下的一些文件" aria-label="Permalink to &quot;根目录下的一些文件&quot;">​</a></h2><ul><li><code>.console_history</code></li></ul><p>存放了控制台(又叫后台)曾经使用过的指令，方便你使用键盘中的 ↑ 键快捷查找曾使用的指令，也可用于查看后台异常。</p><ul><li><code>banned-ips.json</code></li></ul><p>以 json 格式存放的被 ban IP 玩家的 UUID 及游戏名称等相关信息，一旦玩家被 banip ，此 IP 将无法再进入服务器。</p><ul><li><code>banned-players.json</code></li></ul><p>以 json 格式存放了被 ban 玩家的 UUID 及游戏名称等相关信息，离线服 ban 玩家后换 ID 即可进入服务器，而正版服无法通过改名重新进入服务器。</p><ul><li><code>bukkit.yml</code></li></ul><p>由 Bukkit 派生得到的服务端都有的文件。保存着 Bukkit 所提供的最基本的设置选项。</p><ul><li><code>commands.yml</code></li></ul><p>它提供了一种快速而简单的方法来强制服务器使用 Mojang 提供的命令(而不是 Bukkit 中内置的命令)而不产生冲突。</p><ul><li><code>eula.txt</code></li></ul><p>在首次开服的时候，我们需要同意 EULA 协议。</p><ul><li><code>help.yml</code></li></ul><p>一些插件的帮助信息会出现在这里面，一般不需要进行什么修改。</p><ul><li><code>ops.json</code></li></ul><p>以 json 格式存放了 OP 玩家的 UUID 及游戏名称等相关信息。</p><ul><li><code>purpur.jar</code></li></ul><p>你可以改名叫任何名字(只要以 <code>.jar</code> 结尾，且在启动脚本中对应修改)</p><ul><li><code>purpur.yml</code></li></ul><p>Purpur 服务器特有的配置文件，极其详细的配置项，功能非常丰富，几乎可以替代数款插件。</p><ul><li><code>permissions.yml</code></li></ul><p>是默认的权限定义 YAML 文件，在启动时自动生成。它的主要功能是将权限节点组合到一个文件中，以便权限插件(以及使用权限的插件)可以在整个系统中使用它。</p><ul><li><a href="https://minecraft-zh.gamepedia.com/Server.properties" target="_blank" rel="noreferrer"><code>server.properties</code></a></li></ul><p>服务端的一些基本设置就在里面，如设置端口，设置游戏难度，设置游戏模式(生存、创造等)等。</p><ul><li><code>spigot.yml</code></li></ul><p>Spigot 服务器都有的配置文件。</p><ul><li><code>usercache.json</code></li></ul><p>储存着用名字及 UUID 信息的缓存文件。</p><ul><li><code>version_history</code></li></ul><p>一些 Minecraft 和服务端核心的版本信息，一般记录着曾经使用过的版本。</p><ul><li><code>whitelist.json</code></li></ul><p>白名单列表。(如果你在<a href="https://minecraft-zh.gamepedia.com/Server.properties" target="_blank" rel="noreferrer"><code>server.properties</code></a>中开启了白名单，你就可以在该文件中添加和管理谁被允许或不被允许进入服务器。)</p><p>至此，大部分的以 Bukkit 为基础的服务器核心服务端的结构已经大致呈现在你眼前。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果你的服务端有更多的文件，大概率是插件(如 Slimefun、FAWE 等插件会释放更多文件夹)创建的文件夹，一般来说无需担心。</p></div>`,40)]))}const E=i(e,[["render",p]]);export{o as __pageData,E as default};
