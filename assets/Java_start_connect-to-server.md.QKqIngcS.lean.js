import{_ as o,c as l,a5 as i,o as a}from"./chunks/framework.O9ad3XaM.js";const h=JSON.parse('{"title":"连接服务器","description":"","frontmatter":{"title":"连接服务器","sidebar_position":6},"headers":[],"relativePath":"Java/start/connect-to-server.md","filePath":"nitwikit/docs-java/start/connect-to-server.md","lastUpdated":1738054949000}'),t={name:"Java/start/connect-to-server.md"};function c(r,e,n,d,p,s){return a(),l("div",null,e[0]||(e[0]=[i('<h1 id="连接服务器" tabindex="-1">连接服务器 <a class="header-anchor" href="#连接服务器" aria-label="Permalink to &quot;连接服务器&quot;">​</a></h1><h2 id="端口" tabindex="-1">端口 <a class="header-anchor" href="#端口" aria-label="Permalink to &quot;端口&quot;">​</a></h2><p>打开你服务器根目录的 <code>server.properties</code></p><p>找到</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">server-port=25565</span></span></code></pre></div><p><code>25565</code> 即 Minecraft 服务器的默认端口，如果不更改默认端口通常可省略不写</p><h2 id="本地连接" tabindex="-1">本地连接 <a class="header-anchor" href="#本地连接" aria-label="Permalink to &quot;本地连接&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此方法仅适用于服务端和客户端在同一机器上的情况</p></div><p>本机 IP ，通常有这样几种形式：</p><ul><li>localhost</li><li>127.0.0.1</li><li>0.0.0.0</li></ul><p>如果你没有修改你的服务器端口，那么在你的 Minecraft 客户端中:</p><ol><li>点击多人游戏</li><li>点击添加服务器</li><li>输入上面提到的本地 IP 中的任意一个</li><li>点击完成</li><li>进入服务器</li></ol><p>如果你修改了你的服务器端口，在回环地址后面加个冒号加上你改的端口即可</p><p>如:</p><ul><li>localhost:25566</li><li>127.0.0.1:25566</li><li>0.0.0.0:25566</li></ul><div class="warning custom-block"><p class="custom-block-title">警告</p><p>这里要使用英文的 <code>:</code> <strong>不能使用中文</strong>的 <code>：</code> ！</p></div><h2 id="远程连接" tabindex="-1">远程连接 <a class="header-anchor" href="#远程连接" aria-label="Permalink to &quot;远程连接&quot;">​</a></h2><p>在开始让你的玩家远程连接至服务器的时候，请先确认有没有公网</p><h3 id="我有公网" tabindex="-1">我有公网 <a class="header-anchor" href="#我有公网" aria-label="Permalink to &quot;我有公网&quot;">​</a></h3><p>假设我现在的公网 IP 是 <code>114.51.14.191</code>，那么我的连接应该是输入 <code>114.51.14.191:25565</code>，</p><p>注意冒号后面的<strong>端口号</strong>应该和你设置的 <strong><code>server-port</code></strong> 一模一样，不然玩家无法连接</p><p>比如我现在把 <strong><code>server-port</code></strong> 改成了 <strong><code>9180</code></strong>，应该这么进入服务器 <code>114.51.14.191:9180</code></p><p>如果我为 <code>114.51.14.191</code> 绑定了域名 <code>8aka.org</code> ，那么你可以这么进 <code>8aka.org:9180</code></p><p>如果很不幸，你的玩家没有正常连接上来，请先按以下步骤检查</p><ul><li>请尝试本地连接，如果不行，那么就是服务器有问题</li><li>如果本地连接正常，你可以尝试在防火墙中放行端口</li><li>检查你在路由器中是否把这个端口公开到公网</li></ul><h3 id="我没公网" tabindex="-1">我没公网 <a class="header-anchor" href="#我没公网" aria-label="Permalink to &quot;我没公网&quot;">​</a></h3><p>查看 <a href="https://nitwikit.8aka.org/process/deploy/intranet-penetration" target="_blank" rel="noreferrer">内网穿透</a> 部分，按照上面的教程把你的端口映射出去</p><h2 id="常见错误" tabindex="-1">常见错误 <a class="header-anchor" href="#常见错误" aria-label="Permalink to &quot;常见错误&quot;">​</a></h2><p>这些都是连接 Minecraft 服务器时常见的问题</p><ul><li><code>Unknown host / 未知的主机 / Can&#39;t resolve hostname / 无法解析主机名</code></li></ul><p>1.检查你有没有打错域名</p><p>2.如果你刚刚更改 DNS 解析，等一会儿再试(或者 CMD 执行<code>ipconfig /flushdns</code> 试试)</p><p>3.你的域名可能被DNS污染,你可以检查实际解析出来的IP和设置的是否一致,不一致就是被污染了,临时解决方案是更改 DNS 服务器,长远来看最好打开 DNSSEC</p><ul><li><code>数据流终止</code></li></ul><p>这个报错已经不多见,通常来说是运营商干的,比如早期网通和电信,海外流量过境有时会被 GFW 阻断也可能产生此错误</p><ul><li><code>Connection timed out / 连接超时</code></li></ul><p>1.检查你有没有打错域名</p><p>2.检查网络状况(可以试试 ping 服务器,超时就是网的问题)</p><p>3.如果使用 FRP,检查 frp 的配置文件是否正确</p><ul><li><code>Invalid characters in username/ 用户名包含无效字符</code></li></ul><p>用户使用了非 Minecraft 原班允许的用户名进入服务器,可以安装 CnUsername 来解决</p><ul><li><code>Flying is not enabled on this server/ 此服务器未启用飞行</code></li></ul><p>打开 server.properties 文件，把 <code>allow-flight</code> 设置为 <code>true</code> 然后重启服务器</p><ul><li><code>You are sending too many packets!/ 由于超出数据包速率限制而被踢出游戏</code></li></ul><p>一般是开连点器导致的,你可以在<code>paper-global.yml</code>中调整<code>packet-limiter</code>中的<code>max-packet-rate</code>,跳大即可</p><p>如果使用了 ViaVersion,也需要跳大配置文件中的<code>max-pps</code>和<code>tracking-warning-pps</code>值</p><ul><li><code>忽略状态请求</code> 没遇到过这个问题</li><li><code>java.io.IOException: Connection reset by peer</code></li></ul><p>网络太差</p><p>-<code> 无效会话</code></p><p>没有使用正版登录进入正版服务器,也可以关闭<code>online-mode</code>来解决</p><ul><li><code>身份验证服务器目前处于宕机状态。请稍后再试，抱歉</code></li></ul><p>确认 Mojang 或微软账户服务器状态（可通过 <a href="https://status.mojang.com/" target="_blank" rel="noreferrer">Mojang Status</a> 查询）</p><p>Mojang 的验证服务器去维护了,或者自己网络太差,连接不上,可以安装 <a href="https://modrinth.com/plugin/alwaysonlineplugin" target="_blank" rel="noreferrer">AlwaysOnline</a> 来解决</p><ul><li><code>Outdated server! / 服务器版本过时</code> 客户端与服务器版本不一致时会出现此提示。</li></ul><ol><li>检查客户端启动器选择的游戏版本是否与服务器一致（如 1.20.1）</li><li>若服务器支持跨版本（如安装了 ViaVersion），确保客户端版本在插件支持的范围内</li><li>若为原版服务器，客户端需降级或升级至匹配版本</li></ol><ul><li><code>io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused</code></li></ul><ol><li>服务器未启动或已崩溃，检查服务器控制台是否正常运行</li><li>确认服务器 IP 和端口填写正确（默认端口为 <code>25565</code>）</li><li>若使用内网穿透（如 FRP/Ngrok），检查穿透服务是否配置正确</li></ol><ul><li><code>Internal Exception: java.io.IOException: 远程主机强迫关闭了一个现有的连接</code>**</li></ul><ol><li>服务器或客户端网络不稳</li><li>服务器插件冲突（如反作弊插件误判，尝试移除插件排查）</li><li>被服务器防火墙强行关闭了</li><li>连接到海外服务器时被 GFW 阻断了</li></ol><ul><li><code>Server is full! / 服务器已满</code></li></ul><p>调整 <code>server.properties</code> 中的 <code>max-players</code> 值并重启</p><ul><li><code>java.net.SocketException: Connection reset</code></li></ul><ol><li>被本地/服务器防火墙强行关闭了</li><li>连接到海外服务器时被 GFW 阻断了</li></ol><ul><li><code>You are already connected to this server!</code></li></ul><ol><li>有同名的人在服务器上</li><li>网络太差,服务器认为你还在服务器上</li></ol>',65)]))}const g=o(t,[["render",c]]);export{h as __pageData,g as default};
