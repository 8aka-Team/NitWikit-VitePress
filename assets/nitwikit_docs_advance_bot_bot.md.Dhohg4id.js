import{_ as e,c as a,a5 as o,o as r}from"./chunks/framework.Dzz2jpra.js";const h=JSON.parse('{"title":"群机器人","description":"","frontmatter":{"title":"群机器人","slug":"/advance/bot","sidebar_position":6},"headers":[],"relativePath":"nitwikit/docs/advance/bot/bot.md","filePath":"nitwikit/docs/advance/bot/bot.md","lastUpdated":1727693356000}'),n={name:"nitwikit/docs/advance/bot/bot.md"};function s(i,t,d,c,p,l){return r(),a("div",null,t[0]||(t[0]=[o('<h1 id="群机器人" tabindex="-1">群机器人 <a class="header-anchor" href="#群机器人" aria-label="Permalink to &quot;群机器人&quot;">​</a></h1><p>搭建机器人能够让你实现群服消息互通、查询服务器状态、通过聊天即可管理服务器等功能，让你的玩家交流群与服务器连接起来。</p><p>机器人通常分为两个部分，这两个部分分别负责控制QQ号和对社交帐号执行程序。其中控制QQ号的部分叫 <a href="./framework.html">框架</a>。机器人程序必须要通过网络或插件等方式与机器人框架连接，然后才能开始控制QQ号实现对应功能。</p><p>连接的方式目前主流的有 HTTP 协议和 Websocket(ws)协议。每个协议又分为正向和反向，其中正向要求机器人框架本身作为服务器将端口开放给机器人软件进行连接，而反向则要求机器人软件开放端口给框架连接。</p><p>本篇仅列出常见的实现方法，不对具体实现过程描述，请自行查阅相关文档。</p><h2 id="onebot-标准" tabindex="-1">OneBot 标准 <a class="header-anchor" href="#onebot-标准" aria-label="Permalink to &quot;OneBot 标准&quot;">​</a></h2><p><a href="https://onebot.dev/" target="_blank" rel="noreferrer">OneBot</a> 是<strong>统一的聊天机器人应用接口标准</strong>。它适用于各种各样的即时通讯软件，QQ 是其应用场景之一。如果机器人框架和机器人都支持 OneBot，那它们便可以配合使用。</p>',7)]))}const f=e(n,[["render",s]]);export{h as __pageData,f as default};
