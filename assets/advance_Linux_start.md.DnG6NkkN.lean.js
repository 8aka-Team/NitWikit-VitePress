import{_ as o,c as r,a5 as n,G as s,w as e,B as l,o as h,a as t}from"./chunks/framework.O9ad3XaM.js";const u="/assets/5.sLalDnOQ.png",c="/assets/6.CiijV1Gd.png",k="/assets/7.TYkZi6iC.png",v="/assets/8.DgD2FFkv.png",C=JSON.parse('{"title":"启动服务器","description":"","frontmatter":{"title":"启动服务器","sidebar_position":3},"headers":[],"relativePath":"advance/Linux/start.md","filePath":"nitwikit/docs/advance/Linux/start.md","lastUpdated":1749616642000}'),g={name:"advance/Linux/start.md"};function b(m,a,x,j,F,f){const i=l("TabItem"),p=l("Tabs"),d=l("nw-image-viewer");return h(),r("div",null,[a[6]||(a[6]=n(`<h1 id="启动服务器" tabindex="-1">启动服务器 <a class="header-anchor" href="#启动服务器" aria-label="Permalink to &quot;启动服务器&quot;">​</a></h1><p>开服之前，请检查服务器是否安装了 Java，在终端输入</p><p><code>java -ver</code></p><p>如果你看到类似以下的输出，那么服务器中已经安装了 Java</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>openjdk version &quot;21.0.2&quot; 2024-01-16 LTS</span></span>
<span class="line"><span>OpenJDK Runtime Environment Zulu21.32+17-CA (build 21.0.2+13-LTS)</span></span>
<span class="line"><span>OpenJDK 64-Bit Server VM Zulu21.32+17-CA (build 21.0.2+13-LTS, mixed mode, sharing)</span></span></code></pre></div><h2 id="java-安装" tabindex="-1">Java 安装 <a class="header-anchor" href="#java-安装" aria-label="Permalink to &quot;Java 安装&quot;">​</a></h2><p>如果已经安装了 Java，可以忽略掉这一部分。如果环境未安装 Java 可以参考：</p><h3 id="软件包管理器安装" tabindex="-1">软件包管理器安装 <a class="header-anchor" href="#软件包管理器安装" aria-label="Permalink to &quot;软件包管理器安装&quot;">​</a></h3><p>下方以安装 <code>openjdk-17</code> 为例</p>`,9)),s(p,{defaultValue:"Debian/Ubuntu"},{default:e(()=>[s(i,{value:"Debian/Ubuntu"},{default:e(()=>a[0]||(a[0]=[t("sudo apt install openjdk-17-jdk")])),_:1}),s(i,{value:"RedHat/CentOS"},{default:e(()=>a[1]||(a[1]=[t("sudo yum install java-11-openjdk")])),_:1}),s(i,{value:"ArchLinux"},{default:e(()=>a[2]||(a[2]=[t("sudo pacman -S jdk11-openjdk")])),_:1})]),_:1}),a[7]||(a[7]=n('<p>其他发行版安装方式自行百度</p><h3 id="手动♂" tabindex="-1">手动♂ <a class="header-anchor" href="#手动♂" aria-label="Permalink to &quot;手动♂&quot;">​</a></h3><p>推荐使用软件包管理器安装而不是自己手动装</p><details><summary>点击查看</summary><p>一般来说，在 Linux 中进行软件安装部署会放在 <code>/opt</code> 目录下，我们也遵循这个规则，当然你也可以不遵循</p><p>使用 cd 切换到/opt 目录</p><p><code>cd /opt</code></p><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3><h4 id="sftp-文件传输" tabindex="-1">SFTP 文件传输 <a class="header-anchor" href="#sftp-文件传输" aria-label="Permalink to &quot;SFTP 文件传输&quot;">​</a></h4><p>不熟悉 wget 时，先使用 Windows 前往 <a href="https://www.azul.com/downloads/?package=jdk#zulu" target="_blank" rel="noreferrer">zulu 下载</a>，下载再使用 SFTP 软件上传到服务器 <code>/opt</code> 目录下。</p><p>![](_images/Linux 开服/开服/1.png)</p><h4 id="wegt-下载" tabindex="-1">wegt 下载 <a class="header-anchor" href="#wegt-下载" aria-label="Permalink to &quot;wegt 下载&quot;">​</a></h4><p>使用 wget 指令下载</p><p><code>wget https://cdn.azul.com/zulu/bin/zulu21.34.19-ca-jdk21.0.3-linux_x64.tar.gz</code></p><p>![](_images/Linux 开服/开服/2.png)</p><h3 id="压缩包解压" tabindex="-1">压缩包解压 <a class="header-anchor" href="#压缩包解压" aria-label="Permalink to &quot;压缩包解压&quot;">​</a></h3><p>解压压缩包：</p><p>![](_images/Linux 开服/开服/3.png)</p><p>将目录重命名为 jdk21：</p><p>![](_images/Linux 开服/开服/4.png)</p><p>这样就算是安装好了 (PS：这里的操作仅适用于开服使用，若需要其他需要 jdk 的操作请使用包管理器安装 openjdk)</p></details><h2 id="多版本-java-共存" tabindex="-1">多版本 Java 共存 <a class="header-anchor" href="#多版本-java-共存" aria-label="Permalink to &quot;多版本 Java 共存&quot;">​</a></h2><p>方法很多，这里举出两种</p><h2 id="方法一" tabindex="-1">方法一 <a class="header-anchor" href="#方法一" aria-label="Permalink to &quot;方法一&quot;">​</a></h2>',7)),s(p,{defaultValue:"Debian/Ubuntu"},{default:e(()=>[s(i,{value:"Debian/Ubuntu"},{default:e(()=>a[3]||(a[3]=[t("update-alternatives --config java")])),_:1}),s(i,{value:"RedHat/CentOS"},{default:e(()=>a[4]||(a[4]=[t("update-alternatives --config java")])),_:1}),s(i,{value:"ArchLinux"},{default:e(()=>a[5]||(a[5]=[t("archlinux-java set jdk-vesion")])),_:1})]),_:1}),a[8]||(a[8]=n(`<p>然后选择你想使用的 Java，接着 <code>java -version</code> 验证版本</p><h2 id="方法二" tabindex="-1">方法二 <a class="header-anchor" href="#方法二" aria-label="Permalink to &quot;方法二&quot;">​</a></h2><p>设置别名</p><p>确定你所使用的终端，此处以 <code>bash</code> 和 <code>zulu Java</code> 为例</p><p><code>vim ~/.bashrc</code> 在这个文件末尾追加</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># java</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/usr/lib/jvm/zulu-8/bin/java&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java17</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/usr/lib/jvm/zulu-17/bin/java&#39;</span></span></code></pre></div><p>然后刷新：<code>source ~/.bashrc</code></p><ul><li>使用 Java8 开服：</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.jar</span></span></code></pre></div><ul><li>使用 Java17 开服：</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java17</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.jar</span></span></code></pre></div><h2 id="开服" tabindex="-1">开服 <a class="header-anchor" href="#开服" aria-label="Permalink to &quot;开服&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">警告</p><p>TODO - 完善和排版</p></div><p>在/opt 目录中使用 mkdir 创建一个目录用于开服</p><p><img src="`+u+'" alt=""></p><p>将核心放入服务器内，并编写简单的开服脚本</p><p>使用 chmod 命令给脚本增加运行权限</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.sh</span></span></code></pre></div><p><img src="'+c+'" alt=""></p><p>输入./start.sh 或者输入 bash start.sh 即可启动</p><p><img src="'+k+'" alt=""></p><p>使用 vim 修改 eula 为 true 就可以开服了</p><p><img src="'+v+'" alt=""></p>',23)),s(d)])}const q=o(g,[["render",b]]);export{C as __pageData,q as default};
