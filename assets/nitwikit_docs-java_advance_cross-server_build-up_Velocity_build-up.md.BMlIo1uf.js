import{_ as a,c as i,a5 as e,o as l}from"./chunks/framework.Dzz2jpra.js";const g=JSON.parse('{"title":"搭建","description":"","frontmatter":{"title":"搭建","sidebar_position":2},"headers":[],"relativePath":"nitwikit/docs-java/advance/cross-server/build-up/Velocity/build-up.md","filePath":"nitwikit/docs-java/advance/cross-server/build-up/Velocity/build-up.md","lastUpdated":1727754229000}'),o={name:"nitwikit/docs-java/advance/cross-server/build-up/Velocity/build-up.md"};function n(t,s,r,d,p,c){return l(),i("div",null,s[0]||(s[0]=[e(`<h1 id="搭建" tabindex="-1">搭建 <a class="header-anchor" href="#搭建" aria-label="Permalink to &quot;搭建&quot;">​</a></h1><h2 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h2><p>在 <a href="/docs-java/advance/cross-server/server-core-choose.html">核心选择</a> 找到 Velocity 然后下载</p><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>创建一个新的文件夹将核心放进去</p><p>并且使用参数启动以生成初始文件</p><p>如果想进一步优化可以使用 JVM 参数 <a href="https://docs.papermc.io/velocity/getting-started#launching-velocity-under-windows" target="_blank" rel="noreferrer">Velocity 官方</a>有推荐的 Flags</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Xms1024M</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Xmx1024M</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 核心名字.jar</span></span></code></pre></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>打开 <code>velocity.toml</code></p><p>找到并修改以下内容:</p><blockquote><p>在 <strong>[servers]</strong> 那里该填什么?</p><blockquote><p>答: <code>子服名 = &quot;子服地址&quot;</code></p><p>如 <code>login = &quot;0.0.0.0:25501&quot;</code></p></blockquote></blockquote><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>中文需要用引号括起来。如<code>&quot;登录服&quot; = &quot;0.0.0.0:25501&quot;</code></p></div><p><a href="./velocity.toml.html">详细配置文件讲解</a></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># velocity端的端口号，数字1000~65536随意</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bind = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0:25577&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正版验证，有1.19.1+的子服不建议开启此项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">online-mode = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1.13+这里填modern 1.12-填bungeeguard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">player-info-forwarding-mode = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;modern&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否应将服务器列表ping请求传递给后端服务器？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可用选项：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - &quot;disabled&quot;：不会进行任何传递。velocity.toml和server-icon.png将确定初始服务器列表ping响应。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - &quot;mods&quot;：仅将后端服务器的mod列表传递到响应中。将使用具有mod列表的后端服务器的第一个服务器。如果无法联系后端服务器，则Velocity不会显示任何mod信息。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - &quot;description&quot;：使用后端服务器的描述和mod列表。将使用响应的第一个服务器列表中的第一个服务器(或强制主机)进行描述和mod列表。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - &quot;all&quot;：将后端服务器的响应用作代理响应。如果无法联系服务器，则使用Velocity配置。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 人话，motd插件在代理端用&quot;disabled&quot;，否则用&quot;all&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ping-passthrough = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 子服名称和地址，名称不可包含”.”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 登录服</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0:25501&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 生存服</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">survival = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0.:25502&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 资源服</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resource = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0:25503&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 尝试连接子服的先后顺序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">try = [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;login&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">，&quot;survival&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 建议删除此项所有值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forced-hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;lobby.example.com&quot; = [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;lobby&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="子服配置" tabindex="-1">子服配置 <a class="header-anchor" href="#子服配置" aria-label="Permalink to &quot;子服配置&quot;">​</a></h2><p>Velocity 支持将玩家信息(如 IP 地址、UUID 和皮肤)转发到你的服务器。Velocity 支持三种转发格式：</p><ul><li><strong>Velocity Modern 转发</strong> (现代转发)是一种自定义的转发格式(modern 转发)，它更安全。</li><li><strong>BungeeCord 转发</strong>(也称为<em>传统转发</em>)，它有更好的兼容性但安全性较低。</li><li><strong>BungeeGuard</strong>，与传统 BungeeCord 转发相同，但包含了一个密钥。它比单独的 BungeeCord 转发更好，但不如 Velocitymodern 转发理想。</li></ul><p>你只能选择这些转发格式中的一种。目前不可能“混合匹配”转发模式或同时使用所有转发格式。一般来说，如果你只支持使用 Minecraft 1.13 及更新版本的客户端，请使用 Velocity Modern 转发； 否则，你必须使用 BungeeCord 转发。</p><h3 id="配置现代转发-modern-forwarding" tabindex="-1">配置现代转发(Modern Forwarding) <a class="header-anchor" href="#配置现代转发-modern-forwarding" aria-label="Permalink to &quot;配置现代转发(Modern Forwarding)&quot;">​</a></h3><details><summary>点击展开</summary><p><strong><code>modern</code> 转发</strong> 是 Velocity 的原生格式，以高效的二进制格式转发所有玩家信息，并采用 MAC 代码增加安全性，使非法服务器难以绕过你的 Velocity 代理。但它<strong>仅支持 Minecraft 1.13 或更高版本</strong>。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><code>modern</code> 转发与 <strong>Minecraft 1.13 以下版本</strong> 和 <strong>ProtocolSupport 插件</strong> 不兼容。如果使用这些，你需要使用传统的 BungeeCord 兼容转发。</li></ul></div><h4 id="配置步骤" tabindex="-1">配置步骤 <a class="header-anchor" href="#配置步骤" aria-label="Permalink to &quot;配置步骤&quot;">​</a></h4><ol><li>在 <code>velocity.toml</code> 文件中将 <code>player-info-forwarding</code> 设置为 <code>modern</code>。</li><li>确保你的服务器已正确配置以使用 Velocity 转发。</li></ol><h4 id="为-paper-配置现代转发" tabindex="-1">为 Paper 配置现代转发 <a class="header-anchor" href="#为-paper-配置现代转发" aria-label="Permalink to &quot;为 Paper 配置现代转发&quot;">​</a></h4><ul><li>Paper <strong>1.14 及以上版本</strong> 以及 <strong>1.13.1/1.13.2 版本 377 及以上版本</strong> 原生支持 Velocity 现代转发。</li></ul><ol><li>在 <code>server.properties</code> 文件中禁用 <code>online-mode</code> 设置，以防止服务器自行验证玩家身份。</li><li>如果之前已启用 BungeeCord 转发，需在 <code>spigot.yml</code> 中将 <code>settings.bungeecord</code> 设置为 <code>false</code>。</li><li>在 <code>config/paper-global.yml</code> 中： <ul><li>设置 <code>proxies.velocity.enabled</code> 为 true。</li><li>设置 <code>proxies.velocity.secret</code> 以匹配你的 <code>forwarding.secret</code> 文件中的密钥。</li><li>设置 <code>proxies.velocity.online-mode</code> 与你的 <code>velocity.toml</code> 中的 <code>online-mode</code> 一致。</li></ul></li><li>编辑完成后，重新启动服务器。</li></ol><p><strong>注意</strong>：如果你使用的是 Paper <strong>1.18.2 或更低版本</strong>，请在 <code>paper.yml</code> 文件中查找相关设置。</p><details><summary>点击展开-为Fabric/Forge配置现代转发</summary><h4 id="为-fabric-配置现代转发" tabindex="-1">为 Fabric 配置现代转发 <a class="header-anchor" href="#为-fabric-配置现代转发" aria-label="Permalink to &quot;为 Fabric 配置现代转发&quot;">​</a></h4><ul><li>使用名为 <strong>FabricProxy-Lite</strong> 的 mod，可以在 Fabric 上使用修改过的服务器与 Velocity 现代转发。</li></ul><h4 id="为-forge-配置现代转发" tabindex="-1">为 Forge 配置现代转发 <a class="header-anchor" href="#为-forge-配置现代转发" aria-label="Permalink to &quot;为 Forge 配置现代转发&quot;">​</a></h4><ul><li>使用名为 <strong>ProxyCompatibleForge</strong> 的 mod，可以在 Forge <strong>1.16.5 或更高版本</strong> 的修改过的服务器上使用 Velocity 现代转发。</li></ul></details></details><h3 id="配置传统-bungeecord-兼容转发-legacy-forwarding" tabindex="-1">配置传统 BungeeCord 兼容转发 (Legacy Forwarding) <a class="header-anchor" href="#配置传统-bungeecord-兼容转发-legacy-forwarding" aria-label="Permalink to &quot;配置传统 BungeeCord 兼容转发 (Legacy Forwarding)&quot;">​</a></h3><details><summary>点击展开</summary><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li>传统转发 <strong>本质上是不安全的</strong>。如果必须使用，应了解如何正确保护你的服务器。</li></ul><ol><li><code>legacy</code> 转发是 BungeeCord 启用 IP 转发时使用的玩家信息转发协议。</li><li>它广泛支持且兼容性强，但 <strong>不安全</strong>。</li><li>在 <code>velocity.toml</code> 中将 <code>player-info-forwarding</code> 设置为 <code>legacy</code>。</li><li>确保服务器能接受 Velocity 发送的转发玩家数据。</li></ol></div><h4 id="增加安全性" tabindex="-1">增加安全性 <a class="header-anchor" href="#增加安全性" aria-label="Permalink to &quot;增加安全性&quot;">​</a></h4><ul><li>对于托管在共享主机上的代理，Velocity 可选地支持 <strong>BungeeGuard</strong>。 <ul><li>将 <code>velocity.toml</code> 中的 <code>player-info-forwarding</code> 设置为 <code>bungeeguard</code>。</li><li>在 BungeeGuard 配置的令牌部分添加 <code>forwarding.secret</code> 文件中的值。</li></ul></li></ul><h4 id="为-spigot-paper-配置传统转发" tabindex="-1">为 Spigot / Paper 配置传统转发 <a class="header-anchor" href="#为-spigot-paper-配置传统转发" aria-label="Permalink to &quot;为 Spigot / Paper 配置传统转发&quot;">​</a></h4><ol><li>在 <code>spigot.yml</code> 中将 <code>settings.bungeecord</code> 设置为 <code>true</code>。</li><li>重新启动服务器。</li></ol><details><summary>点击展开-为Sponge/Fabric配置传送转发</summary><h4 id="为-sponge-配置传统转发" tabindex="-1">为 Sponge 配置传统转发 <a class="header-anchor" href="#为-sponge-配置传统转发" aria-label="Permalink to &quot;为 Sponge 配置传统转发&quot;">​</a></h4><ol><li>停止服务器。</li><li>在 <code>config/sponge/global.conf</code> 文件中将 <code>modules.bungeecord</code> 和 <code>bungeecord.ip-forwarding</code> 设置为 true。</li><li>重新启动 Sponge 服务器。</li></ol><h4 id="为-fabric-配置传统转发" tabindex="-1">为 Fabric 配置传统转发 <a class="header-anchor" href="#为-fabric-配置传统转发" aria-label="Permalink to &quot;为 Fabric 配置传统转发&quot;">​</a></h4><p><strong>警告</strong>：不再有任何积极支持传统转发的 mod。<strong>请改用 Velocity 现代转发</strong>。</p></details></details><h2 id="加入" tabindex="-1">加入 <a class="header-anchor" href="#加入" aria-label="Permalink to &quot;加入&quot;">​</a></h2><p>见 <a href="/docs-java/advance/cross-server/join-server.html">加入服务器</a></p>`,25)]))}const k=a(o,[["render",n]]);export{g as __pageData,k as default};
