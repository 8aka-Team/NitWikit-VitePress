import{_ as i,c as e,a5 as t,G as p,B as l,o as n}from"./chunks/framework.O9ad3XaM.js";const h="/assets/path-1.DgmMjJLZ.png",b=JSON.parse('{"title":"路径相关","description":"","frontmatter":{"title":"路径相关","sidebar_position":3},"headers":[],"relativePath":"preparation/java/path.md","filePath":"nitwikit/docs/preparation/java/path.md","lastUpdated":1737121104000}'),o={name:"preparation/java/path.md"};function r(d,a,c,k,u,g){const s=l("nw-image-viewer");return n(),e("div",null,[a[0]||(a[0]=t('<h1 id="路径相关" tabindex="-1">路径相关 <a class="header-anchor" href="#路径相关" aria-label="Permalink to &quot;路径相关&quot;">​</a></h1><ul><li>绝对路径 - 是从盘符开始的路径.</li></ul><p>形如 <code>C:\\windows\\system32\\cmd.exe</code></p><ul><li>相对路径 - 是从当前路径开始的路径。</li></ul><p>要描述上述路径，只需输入 <code>system32\\cmd.exe</code>。</p><p>实际上，严格的相对路径写法应为 <code>.\\system32\\cmd.exe</code>。</p><p>其中，.表示当前路径，在通道情况下可以省略，只有在特殊的情况下不能省略。</p><h2 id="绝对路径" tabindex="-1">绝对路径 <a class="header-anchor" href="#绝对路径" aria-label="Permalink to &quot;绝对路径&quot;">​</a></h2><p>例如，当你机器上安装了多个 Java（假设为 zulu 8 和 zulu 21）。</p><p>你想在启动 服务器A 时使用 zulu 8，启动 服务器B 时使用 zulu 21。</p><p>那么最简单直接的办法就是 <code>&quot;Java路径&quot; -jar server.jar</code>。</p><p>比如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;C:\\Program Files\\Zulu\\zulu-8\\bin\\java.exe&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.jar</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;C:\\Program Files\\Zulu\\zulu-21\\bin\\java.exe&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.jar</span></span></code></pre></div><h2 id="相对路径" tabindex="-1">相对路径 <a class="header-anchor" href="#相对路径" aria-label="Permalink to &quot;相对路径&quot;">​</a></h2><blockquote><p>也许，使用你制作的服务端的用户才思敏捷，不能独立解决 “怎么说找不到java” 等宇宙终极问题。</p></blockquote><p>相对路径是从当前路径开始的路径。</p><p><img src="'+h+'" alt=""></p><p>如图所示，将 “<strong>zulu-21</strong>” 放进服务端文件夹，接着在启动脚本写入：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">zulu-21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">java.exe</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.jar</span></span></code></pre></div><p>就会使用这个目录下 zulu-21。这样就将 Java “打包” 进服务端了。</p><p>其中，.表示当前路径，在通道情况下可以省略，只有在特殊的情况下不能省略。</p><p>另外，可以用 &quot;..&quot; 表示当前所处的文件夹上一级文件夹的绝对路径。</p><p>但是我很少见到在 Minecraft 服务器的启动脚本中使用它，有需要可以自行研究。</p>',24)),p(s)])}const m=i(o,[["render",r]]);export{b as __pageData,m as default};
