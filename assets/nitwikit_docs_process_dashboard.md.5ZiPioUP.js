import{_ as a,c as i,a5 as n,o as e}from"./chunks/framework.O9ad3XaM.js";const o=JSON.parse('{"title":"搭建面板","description":"","frontmatter":{"title":"搭建面板","sidebar_position":2},"headers":[],"relativePath":"nitwikit/docs/process/dashboard.md","filePath":"nitwikit/docs/process/dashboard.md","lastUpdated":1727783793000}'),l={name:"nitwikit/docs/process/dashboard.md"};function t(p,s,h,k,r,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="搭建面板" tabindex="-1">搭建面板 <a class="header-anchor" href="#搭建面板" aria-label="Permalink to &quot;搭建面板&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>本篇不是让你去购买面板服，而是在已有服务器上搭建！</p></div><p>一个好的面板可以让我们管理服务器更加轻松，快捷，还可以让小白更快上手</p><h2 id="mcsmanager" tabindex="-1">MCSManager <a class="header-anchor" href="#mcsmanager" aria-label="Permalink to &quot;MCSManager&quot;">​</a></h2><p>MCSManager是一款免费，易用，现代化的游戏服务器管理面板，非常适合小白</p><h3 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h3><h4 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h4><p>首先，点击<a href="https://mcsmanager.oss-cn-guangzhou.aliyuncs.com/mcsmanager_windows_release.zip" target="_blank" rel="noreferrer">此链接</a> 一键下载到本地后解压</p><p>解压之后，你就可以看到<code>start.bat</code>，打开就可以启动(就是这么简单)</p><p>关闭面板</p><p>只需分别进入两个终端执行 <code>Ctrl+C</code> 即可。</p><h4 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h4><h5 id="脚本安装" tabindex="-1">脚本安装 <a class="header-anchor" href="#脚本安装" aria-label="Permalink to &quot;脚本安装&quot;">​</a></h5><p>在控制台输入</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> su</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;wget -qO- https://script.mcsmanager.com/setup_cn.sh | bash&quot;</span></span></code></pre></div><p>然后?就完成~(≧▽≦)/~啦</p><p>启动方式:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先启动面板守护进程。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这是用于进程控制，终端管理的服务进程。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsm-daemon.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 再启动面板 Web 服务。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这是用来实现支持网页访问和用户管理的服务。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsm-web.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启面板命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsm-daemon.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsm-web.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止面板命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsm-web.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsm-daemon.service</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果 <code>systemctl</code> 命令无法启动面板，或无法获得sudo权限，可以参考下文的 <code>手动安装</code> 中的 <code>启动方式</code> 来启动 MCSManager。 但这需要你用其他后台运行程序(比如screen)来接管它，否则当你的 <code>SSH</code> 终端断开之时，手动启动的 MCSManager 面板也会随之被系统强制结束。</p><p>面板 Web 服务是提供用户管理与网页访问功能的服务，守护进程是提供进程管理和容器管理的服务，两者缺一不可。如果某个功能不正常，可以只重启这一部分的服务来热修复问题。</p></div><h5 id="手动安装" tabindex="-1">手动安装 <a class="header-anchor" href="#手动安装" aria-label="Permalink to &quot;手动安装&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到安装目录，你也可以换成其他的目录。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载 NodeJS 运行时环境，如果你已经安装了 NodeJS，请忽略此步骤。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://nodejs.org/dist/v20.11.0/node-v20.11.0-linux-x64.tar.xz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node-v20.11.0-linux-x64.tar.xz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加 NodeJS 到系统环境变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/node-v20.11.0-linux-x64/bin/node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/node</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/node-v20.11.0-linux-x64/bin/npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/npm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入你的安装目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/mcsmanager/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/mcsmanager/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载 MCSManager(如果无法下载可以先科学上网下载再上传到服务器)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/MCSManager/MCSManager/releases/latest/download/mcsmanager_linux_release.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压到安装目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcsmanager_linux_release.tar.gz</span></span></code></pre></div><p>启动方式</p><div class="tip custom-block"><p class="custom-block-title">Screen</p><p>关于 Screen 的教程，你可以看<a href="https://blog.csdn.net/u012964600/article/details/136968398" target="_blank" rel="noreferrer">这个</a></p></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请使用 Screen 程序打开两个终端窗口(或者其他接管程序)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 先启动节点程序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./start-daemon.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在第二个终端启动 Web 面板服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./start-web.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 为网络界面访问 http://localhost:23333/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 一般来说，网络应用会自动扫描并连接到本地守护进程。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认需要开放的端口：23333 和 24444</span></span></code></pre></div><h2 id="翼龙面板" tabindex="-1">翼龙面板 <a class="header-anchor" href="#翼龙面板" aria-label="Permalink to &quot;翼龙面板&quot;">​</a></h2><p>翼龙面板的部署相对较为复杂，对新手不太友好</p><p><a href="https://www.alongw.cn/archives/837" target="_blank" rel="noreferrer">这篇</a> 是个较为简单的教程</p>`,27)]))}const g=a(l,[["render",t]]);export{o as __pageData,g as default};
